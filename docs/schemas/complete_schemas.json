{
  "get_public_api_v1_affiliate_network_id_clone": {
    "method": "GET",
    "path": "/public/api/v1/affiliate_network/{id}/clone",
    "summary": "Clone Affiliate Network.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_affiliate_network": {
    "method": "POST",
    "path": "/public/api/v1/affiliate_network",
    "summary": "Create Affiliate Network.",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "get_public_api_v1_affiliate_network_id": {
    "method": "GET",
    "path": "/public/api/v1/affiliate_network/{id}",
    "summary": "Get Affiliate Network details.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_affiliate_network_id": {
    "method": "PUT",
    "path": "/public/api/v1/affiliate_network/{id}",
    "summary": "Edit Affiliate Network.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "delete_public_api_v1_affiliate_network_id": {
    "method": "DELETE",
    "path": "/public/api/v1/affiliate_network/{id}",
    "summary": "Delete Affiliate Network.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "patch_public_api_v1_affiliate_network_id": {
    "method": "PATCH",
    "path": "/public/api/v1/affiliate_network/{id}",
    "summary": "Restore Affiliate Network.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Restored/Modified successfully",
        "example": {
          "message": "Resource restored successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_affiliate_network_list_filtered": {
    "method": "GET",
    "path": "/public/api/v1/affiliate_network/list/filtered",
    "summary": "Get Affiliate network list filtered.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      },
      {
        "name": "sortColumn",
        "type": "string",
        "required": false,
        "description": "Column to sort by",
        "in": "query"
      },
      {
        "name": "sortType",
        "type": "string",
        "required": false,
        "description": "Sort direction",
        "in": "query",
        "enum": [
          "asc",
          "desc"
        ]
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_affiliate_network_list_all": {
    "method": "GET",
    "path": "/public/api/v1/affiliate_network/list/all",
    "summary": "Get Affiliate Network list.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      },
      {
        "name": "sortColumn",
        "type": "string",
        "required": false,
        "description": "Column to sort by",
        "in": "query"
      },
      {
        "name": "sortType",
        "type": "string",
        "required": false,
        "description": "Sort direction",
        "in": "query",
        "enum": [
          "asc",
          "desc"
        ]
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_affiliate_network_preset_catalog": {
    "method": "GET",
    "path": "/public/api/v1/affiliate_network/preset/catalog",
    "summary": "Get Affiliate Network presets.",
    "parameters": [],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_affiliate_network_id_rename": {
    "method": "PUT",
    "path": "/public/api/v1/affiliate_network/{id}/rename",
    "summary": "Rename Affiliate Network.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_clicks_campaign_id": {
    "method": "PUT",
    "path": "/public/api/v1/clicks/campaign/{id}",
    "summary": "Update campaign`s clicks cost.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "paused"
            ],
            "description": "Campaign status"
          }
        }
      },
      "example": {
        "name": "Updated Campaign Name",
        "cost": 0.15,
        "status": "active"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "delete_public_api_v1_clicks_campaign_id": {
    "method": "DELETE",
    "path": "/public/api/v1/clicks/campaign/{id}",
    "summary": "Delete campaign`s clicks.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_info_affiliate_network": {
    "method": "GET",
    "path": "/public/api/v1/info/affiliate_network",
    "summary": "Get traffic sources info.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_info_campaign": {
    "method": "GET",
    "path": "/public/api/v1/info/campaign",
    "summary": "Get campaigns info.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_info_landing": {
    "method": "GET",
    "path": "/public/api/v1/info/landing",
    "summary": "Get landings info.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_info_offer": {
    "method": "GET",
    "path": "/public/api/v1/info/offer",
    "summary": "Get offers info.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_info_rotation": {
    "method": "GET",
    "path": "/public/api/v1/info/rotation",
    "summary": "Get rotations info.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_info_traffic_source": {
    "method": "GET",
    "path": "/public/api/v1/info/traffic_source",
    "summary": "Get traffic sources info.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_report_page": {
    "method": "GET",
    "path": "/public/api/v1/report/{page}",
    "summary": "Get Report.",
    "parameters": [
      {
        "name": "page",
        "type": "string",
        "required": true,
        "description": "Page identifier",
        "in": "path"
      },
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_report_user_campaign": {
    "method": "GET",
    "path": "/public/api/v1/report/user/campaign",
    "summary": "Get user campaigns Report.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_report_affiliate_network_groupings": {
    "method": "GET",
    "path": "/public/api/v1/report/affiliate_network/groupings",
    "summary": "Get Affiliate network Groupings for single aggregate.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_report_campaign_groupings": {
    "method": "GET",
    "path": "/public/api/v1/report/campaign/groupings",
    "summary": "Get Campaign Groupings for single aggregate.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_report_campaign_groupings_multiple": {
    "method": "GET",
    "path": "/public/api/v1/report/campaign/groupings/multiple",
    "summary": "Get Groupings for multiple aggregates.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_report_landing_groupings": {
    "method": "GET",
    "path": "/public/api/v1/report/landing/groupings",
    "summary": "Get Landing Groupings for single aggregate.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_report_groupings_multiple": {
    "method": "GET",
    "path": "/public/api/v1/report/groupings/multiple",
    "summary": "Get Groupings for multiple aggregates.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_report_offer_groupings": {
    "method": "GET",
    "path": "/public/api/v1/report/offer/groupings",
    "summary": "Get Offer Groupings for single aggregate.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_report_rotation_groupings": {
    "method": "GET",
    "path": "/public/api/v1/report/rotation/groupings",
    "summary": "Get Rotation Groupings for single aggregate.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_report_traffic_source_groupings": {
    "method": "GET",
    "path": "/public/api/v1/report/traffic_source/groupings",
    "summary": "Get Traffic source Groupings for single aggregate.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_report_mark_campaign_id": {
    "method": "POST",
    "path": "/public/api/v1/report/mark/campaign/{id}",
    "summary": "Set mark to token by campaign id.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "trafficSourceId": {
            "type": "integer",
            "description": "Traffic source ID"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          }
        },
        "required": [
          "name",
          "trafficSourceId"
        ]
      },
      "example": {
        "name": "Test Campaign",
        "trafficSourceId": 1,
        "cost": 0.1,
        "currency": "USD"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "delete_public_api_v1_report_mark_campaign_id": {
    "method": "DELETE",
    "path": "/public/api/v1/report/mark/campaign/{id}",
    "summary": "Delete mark for token by campaign id.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_report_mark_traffic_source_id": {
    "method": "POST",
    "path": "/public/api/v1/report/mark/traffic_source/{id}",
    "summary": "Set mark to token by traffic source id.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token to mark"
          },
          "tokenValue": {
            "type": "string",
            "description": "Token value"
          },
          "mark": {
            "type": "string",
            "description": "Mark type"
          }
        },
        "required": [
          "token",
          "tokenValue",
          "mark"
        ]
      },
      "example": {
        "token": "click_id",
        "tokenValue": "accepted",
        "mark": "mints"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "delete_public_api_v1_report_mark_traffic_source_id": {
    "method": "DELETE",
    "path": "/public/api/v1/report/mark/traffic_source/{id}",
    "summary": "Delete mark for token by traffic source id.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_report_mark_campaign_id_multiple": {
    "method": "POST",
    "path": "/public/api/v1/report/mark/campaign/{id}/multiple",
    "summary": "Set mark to multiple tokens by campaign id.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "trafficSourceId": {
            "type": "integer",
            "description": "Traffic source ID"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          }
        },
        "required": [
          "name",
          "trafficSourceId"
        ]
      },
      "example": {
        "name": "Test Campaign",
        "trafficSourceId": 1,
        "cost": 0.1,
        "currency": "USD"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "post_public_api_v1_report_mark_traffic_source_id_multiple": {
    "method": "POST",
    "path": "/public/api/v1/report/mark/traffic_source/{id}/multiple",
    "summary": "Set mark to multiple tokens by traffic source id.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token to mark"
          },
          "tokenValue": {
            "type": "string",
            "description": "Token value"
          },
          "mark": {
            "type": "string",
            "description": "Mark type"
          }
        },
        "required": [
          "token",
          "tokenValue",
          "mark"
        ]
      },
      "example": {
        "token": "click_id",
        "tokenValue": "accepted",
        "mark": "mints"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "post_public_api_v1_report_preset_subject_uuid": {
    "method": "POST",
    "path": "/public/api/v1/report/preset/{subject}/{uuid}",
    "summary": "Create preset.",
    "parameters": [
      {
        "name": "subject",
        "type": "string",
        "required": true,
        "description": "Subject identifier",
        "in": "path"
      },
      {
        "name": "uuid",
        "type": "string",
        "required": true,
        "description": "Uuid identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "delete_public_api_v1_report_preset_uuid": {
    "method": "DELETE",
    "path": "/public/api/v1/report/preset/{uuid}",
    "summary": "Delete preset.",
    "parameters": [
      {
        "name": "uuid",
        "type": "string",
        "required": true,
        "description": "Uuid identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_report_preset_subject": {
    "method": "GET",
    "path": "/public/api/v1/report/preset/{subject}",
    "summary": "Get presets by Subject.",
    "parameters": [
      {
        "name": "subject",
        "type": "string",
        "required": true,
        "description": "Subject identifier",
        "in": "path"
      },
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_report_simple_filter_subject_uuid": {
    "method": "POST",
    "path": "/public/api/v1/report/simple_filter/{subject}/{uuid}",
    "summary": "Create Simple filter.",
    "parameters": [
      {
        "name": "subject",
        "type": "string",
        "required": true,
        "description": "Subject identifier",
        "in": "path"
      },
      {
        "name": "uuid",
        "type": "string",
        "required": true,
        "description": "Uuid identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "put_public_api_v1_report_simple_filter_uuid": {
    "method": "PUT",
    "path": "/public/api/v1/report/simple_filter/{uuid}",
    "summary": "Edit Simple filter.",
    "parameters": [
      {
        "name": "uuid",
        "type": "string",
        "required": true,
        "description": "Uuid identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "delete_public_api_v1_report_simple_filter_uuid": {
    "method": "DELETE",
    "path": "/public/api/v1/report/simple_filter/{uuid}",
    "summary": "Delete Simple filter.",
    "parameters": [
      {
        "name": "uuid",
        "type": "string",
        "required": true,
        "description": "Uuid identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_report_simple_filter_operators_list": {
    "method": "GET",
    "path": "/public/api/v1/report/simple_filter/operators/list",
    "summary": "Get Simple filter Operators.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      },
      {
        "name": "sortColumn",
        "type": "string",
        "required": false,
        "description": "Column to sort by",
        "in": "query"
      },
      {
        "name": "sortType",
        "type": "string",
        "required": false,
        "description": "Sort direction",
        "in": "query",
        "enum": [
          "asc",
          "desc"
        ]
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_report_simple_filter_subject": {
    "method": "GET",
    "path": "/public/api/v1/report/simple_filter/{subject}",
    "summary": "Get Simple filters by Subject.",
    "parameters": [
      {
        "name": "subject",
        "type": "string",
        "required": true,
        "description": "Subject identifier",
        "in": "path"
      },
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_stats_affiliate_network": {
    "method": "GET",
    "path": "/public/api/v1/stats/affiliate_network",
    "summary": "Get stats Affiliate Network.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_stats_campaign": {
    "method": "GET",
    "path": "/public/api/v1/stats/campaign",
    "summary": "Get stats Campaign.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_stats_landing": {
    "method": "GET",
    "path": "/public/api/v1/stats/landing",
    "summary": "Get stats Landing.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_stats_offer": {
    "method": "GET",
    "path": "/public/api/v1/stats/offer",
    "summary": "Get stats Offer.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_stats_rotation": {
    "method": "GET",
    "path": "/public/api/v1/stats/rotation",
    "summary": "Get stats Rotation.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_stats_traffic_source": {
    "method": "GET",
    "path": "/public/api/v1/stats/traffic_source",
    "summary": "Get stats Traffic Source.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_identity_api_key_block_id": {
    "method": "POST",
    "path": "/public/api/v1/identity/api_key/block/{id}",
    "summary": "Identity Block ApiKey",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "get_public_api_v1_identity_api_key_id": {
    "method": "GET",
    "path": "/public/api/v1/identity/api_key/{id}",
    "summary": "Identity Get ApiKey",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_identity_api_key_refresh_id": {
    "method": "PUT",
    "path": "/public/api/v1/identity/api_key/refresh/{id}",
    "summary": "Identity Refresh ApiKey",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_identity_api_key_unblock_id": {
    "method": "POST",
    "path": "/public/api/v1/identity/api_key/unblock/{id}",
    "summary": "Identity Unblock ApiKey",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "post_public_api_v1_binom_protect_beta_disable": {
    "method": "POST",
    "path": "/public/api/v1/binom/protect/beta/disable",
    "summary": "Disable Beta",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "get_public_api_v1_binom_protect_beta_status": {
    "method": "GET",
    "path": "/public/api/v1/binom/protect/beta/status",
    "summary": "Get Beta status",
    "parameters": [],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_binom_protect_methods": {
    "method": "GET",
    "path": "/public/api/v1/binom/protect/methods",
    "summary": "Get available bot detection methods and presets",
    "parameters": [],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_binom_protect_campaign_campaignId_settings": {
    "method": "GET",
    "path": "/public/api/v1/binom/protect/campaign/{campaignId}/settings",
    "summary": "Get Settings for a Campaign",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": true,
        "description": "Campaignid identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_binom_protect_campaign_campaignId_settings": {
    "method": "POST",
    "path": "/public/api/v1/binom/protect/campaign/{campaignId}/settings",
    "summary": "Update Settings for a Campaign",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": true,
        "description": "Campaignid identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "trafficSourceId": {
            "type": "integer",
            "description": "Traffic source ID"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          }
        },
        "required": [
          "name",
          "trafficSourceId"
        ]
      },
      "example": {
        "name": "Test Campaign",
        "trafficSourceId": 1,
        "cost": 0.1,
        "currency": "USD"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "post_public_api_v1_binom_protect_campaigns_settings": {
    "method": "POST",
    "path": "/public/api/v1/binom/protect/campaigns/settings",
    "summary": "Update Settings for multiple Campaigns",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "trafficSourceId": {
            "type": "integer",
            "description": "Traffic source ID"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          }
        },
        "required": [
          "name",
          "trafficSourceId"
        ]
      },
      "example": {
        "name": "Test Campaign",
        "trafficSourceId": 1,
        "cost": 0.1,
        "currency": "USD"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "post_public_api_v1_binom_protect_visits_campaignId_reset": {
    "method": "POST",
    "path": "/public/api/v1/binom/protect/visits/{campaignId}/reset",
    "summary": "Reset first visits counter.",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": true,
        "description": "Campaignid identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "trafficSourceId": {
            "type": "integer",
            "description": "Traffic source ID"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          }
        },
        "required": [
          "name",
          "trafficSourceId"
        ]
      },
      "example": {
        "name": "Test Campaign",
        "trafficSourceId": 1,
        "cost": 0.1,
        "currency": "USD"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "delete_public_api_v1_csv_clicklog_clear": {
    "method": "DELETE",
    "path": "/public/api/v1/csv/clicklog/clear",
    "summary": "Delete all clicklog files.",
    "parameters": [],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "delete_public_api_v1_csv_conversions_clear": {
    "method": "DELETE",
    "path": "/public/api/v1/csv/conversions/clear",
    "summary": "Delete all conversion files.",
    "parameters": [],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_csv_file_filename": {
    "method": "GET",
    "path": "/public/api/v1/csv/file/{filename}",
    "summary": "Download file by name.",
    "parameters": [
      {
        "name": "filename",
        "type": "string",
        "required": true,
        "description": "Filename identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "delete_public_api_v1_csv_file_filename": {
    "method": "DELETE",
    "path": "/public/api/v1/csv/file/{filename}",
    "summary": "Delete file by name.",
    "parameters": [
      {
        "name": "filename",
        "type": "string",
        "required": true,
        "description": "Filename identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_csv_task_dequeue_id": {
    "method": "POST",
    "path": "/public/api/v1/csv/task/dequeue/{id}",
    "summary": "Remove task from the queue.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "post_public_api_v1_csv_task_enqueue": {
    "method": "POST",
    "path": "/public/api/v1/csv/task/enqueue",
    "summary": "Add new task to the queue.",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "get_public_api_v1_csv_files": {
    "method": "GET",
    "path": "/public/api/v1/csv/files",
    "summary": "Get csv files.",
    "parameters": [],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_campaign_change_setting": {
    "method": "POST",
    "path": "/public/api/v1/campaign/change_setting",
    "summary": "Edit Settings for multiple Campaigns",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "trafficSourceId": {
            "type": "integer",
            "description": "Traffic source ID"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          }
        },
        "required": [
          "name",
          "trafficSourceId"
        ]
      },
      "example": {
        "name": "Test Campaign",
        "trafficSourceId": 1,
        "cost": 0.1,
        "currency": "USD"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "post_public_api_v1_campaign_change_cost": {
    "method": "POST",
    "path": "/public/api/v1/campaign/change_cost",
    "summary": "Change cost for multiple Campaigns",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "trafficSourceId": {
            "type": "integer",
            "description": "Traffic source ID"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          }
        },
        "required": [
          "name",
          "trafficSourceId"
        ]
      },
      "example": {
        "name": "Test Campaign",
        "trafficSourceId": 1,
        "cost": 0.1,
        "currency": "USD"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "post_public_api_v1_campaign_change_domain": {
    "method": "POST",
    "path": "/public/api/v1/campaign/change_domain",
    "summary": "Change Domain for multiple Campaigns",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "trafficSourceId": {
            "type": "integer",
            "description": "Traffic source ID"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          }
        },
        "required": [
          "name",
          "trafficSourceId"
        ]
      },
      "example": {
        "name": "Test Campaign",
        "trafficSourceId": 1,
        "cost": 0.1,
        "currency": "USD"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "post_public_api_v1_campaign_change_group": {
    "method": "POST",
    "path": "/public/api/v1/campaign/change_group",
    "summary": "Change Group for multiple Campaigns",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "trafficSourceId": {
            "type": "integer",
            "description": "Traffic source ID"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          }
        },
        "required": [
          "name",
          "trafficSourceId"
        ]
      },
      "example": {
        "name": "Test Campaign",
        "trafficSourceId": 1,
        "cost": 0.1,
        "currency": "USD"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "post_public_api_v1_campaign_campaignId_owner": {
    "method": "POST",
    "path": "/public/api/v1/campaign/{campaignId}/owner",
    "summary": "Change Campaign Owner",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": true,
        "description": "Campaignid identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "trafficSourceId": {
            "type": "integer",
            "description": "Traffic source ID"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          }
        },
        "required": [
          "name",
          "trafficSourceId"
        ]
      },
      "example": {
        "name": "Test Campaign",
        "trafficSourceId": 1,
        "cost": 0.1,
        "currency": "USD"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "delete_public_api_v1_campaign_campaignId_owner": {
    "method": "DELETE",
    "path": "/public/api/v1/campaign/{campaignId}/owner",
    "summary": "Delete Campaign Owner",
    "parameters": [
      {
        "name": "campaignId",
        "type": "string",
        "required": true,
        "description": "Campaignid identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_campaign_change_traffic_distribution_info": {
    "method": "POST",
    "path": "/public/api/v1/campaign/change_traffic_distribution_info",
    "summary": "Change TrafficDistributionInfo for multiple Campaigns",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "trafficSourceId": {
            "type": "integer",
            "description": "Traffic source ID"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          }
        },
        "required": [
          "name",
          "trafficSourceId"
        ]
      },
      "example": {
        "name": "Test Campaign",
        "trafficSourceId": 1,
        "cost": 0.1,
        "currency": "USD"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "get_public_api_v1_campaign_id_clone": {
    "method": "GET",
    "path": "/public/api/v1/campaign/{id}/clone",
    "summary": "Clone Campaign.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_campaign": {
    "method": "POST",
    "path": "/public/api/v1/campaign",
    "summary": "Create Campaign.",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "trafficSourceId": {
            "type": "integer",
            "description": "Traffic source ID"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          }
        },
        "required": [
          "name",
          "trafficSourceId"
        ]
      },
      "example": {
        "name": "Test Campaign",
        "trafficSourceId": 1,
        "cost": 0.1,
        "currency": "USD"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "get_public_api_v1_campaign_id": {
    "method": "GET",
    "path": "/public/api/v1/campaign/{id}",
    "summary": "Get Campaign.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_campaign_id": {
    "method": "PUT",
    "path": "/public/api/v1/campaign/{id}",
    "summary": "Edit Campaign.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "paused"
            ],
            "description": "Campaign status"
          }
        }
      },
      "example": {
        "name": "Updated Campaign Name",
        "cost": 0.15,
        "status": "active"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "delete_public_api_v1_campaign_id": {
    "method": "DELETE",
    "path": "/public/api/v1/campaign/{id}",
    "summary": "Delete Campaign.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "patch_public_api_v1_campaign_id": {
    "method": "PATCH",
    "path": "/public/api/v1/campaign/{id}",
    "summary": "Restore Campaign.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "paused"
            ],
            "description": "Campaign status"
          }
        }
      },
      "example": {
        "name": "Updated Campaign Name",
        "cost": 0.15,
        "status": "active"
      }
    },
    "responses": {
      "200": {
        "description": "Restored/Modified successfully",
        "example": {
          "message": "Resource restored successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_campaign_id_link": {
    "method": "GET",
    "path": "/public/api/v1/campaign/{id}/link",
    "summary": "Get Campaign link.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_campaign_list_filtered": {
    "method": "GET",
    "path": "/public/api/v1/campaign/list/filtered",
    "summary": "Get Campaign list filtered.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      },
      {
        "name": "sortColumn",
        "type": "string",
        "required": false,
        "description": "Column to sort by",
        "in": "query"
      },
      {
        "name": "sortType",
        "type": "string",
        "required": false,
        "description": "Sort direction",
        "in": "query",
        "enum": [
          "asc",
          "desc"
        ]
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_campaign_short_info": {
    "method": "GET",
    "path": "/public/api/v1/campaign/short/info",
    "summary": "Get Campaign short info with links.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_campaign_by_rotation_rotationId_list": {
    "method": "GET",
    "path": "/public/api/v1/campaign/by_rotation/{rotationId}/list",
    "summary": "Get Campaigns list by Rotation ID.",
    "parameters": [
      {
        "name": "rotationId",
        "type": "string",
        "required": true,
        "description": "Rotationid identifier",
        "in": "path"
      },
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      },
      {
        "name": "sortColumn",
        "type": "string",
        "required": false,
        "description": "Column to sort by",
        "in": "query"
      },
      {
        "name": "sortType",
        "type": "string",
        "required": false,
        "description": "Sort direction",
        "in": "query",
        "enum": [
          "asc",
          "desc"
        ]
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_campaign_traffic_source_list": {
    "method": "GET",
    "path": "/public/api/v1/campaign/traffic_source/list",
    "summary": "Get TrafficSource with Campaign list.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      },
      {
        "name": "sortColumn",
        "type": "string",
        "required": false,
        "description": "Column to sort by",
        "in": "query"
      },
      {
        "name": "sortType",
        "type": "string",
        "required": false,
        "description": "Sort direction",
        "in": "query",
        "enum": [
          "asc",
          "desc"
        ]
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_campaign_id_permissions": {
    "method": "GET",
    "path": "/public/api/v1/campaign/{id}/permissions",
    "summary": "Get users with Permission access to the passed Campaign",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_campaign_id_permissions": {
    "method": "POST",
    "path": "/public/api/v1/campaign/{id}/permissions",
    "summary": "Grant user access to the specified campaign",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "trafficSourceId": {
            "type": "integer",
            "description": "Traffic source ID"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          }
        },
        "required": [
          "name",
          "trafficSourceId"
        ]
      },
      "example": {
        "name": "Test Campaign",
        "trafficSourceId": 1,
        "cost": 0.1,
        "currency": "USD"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "delete_public_api_v1_campaign_id_permissions": {
    "method": "DELETE",
    "path": "/public/api/v1/campaign/{id}/permissions",
    "summary": "Revoke users access to the specified campaign",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "patch_public_api_v1_campaign_modify_id": {
    "method": "PATCH",
    "path": "/public/api/v1/campaign/modify/{id}",
    "summary": "Partially update Campaign.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "paused"
            ],
            "description": "Campaign status"
          }
        }
      },
      "example": {
        "name": "Updated Campaign Name",
        "cost": 0.15,
        "status": "active"
      }
    },
    "responses": {
      "200": {
        "description": "Restored/Modified successfully",
        "example": {
          "message": "Resource restored successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_campaign_id_rename": {
    "method": "PUT",
    "path": "/public/api/v1/campaign/{id}/rename",
    "summary": "Rename Campaign.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "paused"
            ],
            "description": "Campaign status"
          }
        }
      },
      "example": {
        "name": "Updated Campaign Name",
        "cost": 0.15,
        "status": "active"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_campaign_switch_domain": {
    "method": "POST",
    "path": "/public/api/v1/campaign/switch_domain",
    "summary": "Change Domain for multiple Campaigns",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "trafficSourceId": {
            "type": "integer",
            "description": "Traffic source ID"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "currency": {
            "type": "string",
            "description": "Currency code",
            "default": "USD"
          }
        },
        "required": [
          "name",
          "trafficSourceId"
        ]
      },
      "example": {
        "name": "Test Campaign",
        "trafficSourceId": 1,
        "cost": 0.1,
        "currency": "USD"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "put_public_api_v1_campaign_landing_pause": {
    "method": "PUT",
    "path": "/public/api/v1/campaign/landing/pause",
    "summary": "Pause landing in campaign.",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "paused"
            ],
            "description": "Campaign status"
          }
        }
      },
      "example": {
        "name": "Updated Campaign Name",
        "cost": 0.15,
        "status": "active"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_campaign_offer_pause": {
    "method": "PUT",
    "path": "/public/api/v1/campaign/offer/pause",
    "summary": "Pause offer in campaign.",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "paused"
            ],
            "description": "Campaign status"
          }
        }
      },
      "example": {
        "name": "Updated Campaign Name",
        "cost": 0.15,
        "status": "active"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_campaign_path_pause": {
    "method": "PUT",
    "path": "/public/api/v1/campaign/path/pause",
    "summary": "Pause path in campaign.",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Campaign name"
          },
          "cost": {
            "type": "number",
            "description": "Cost per click"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "paused"
            ],
            "description": "Campaign status"
          }
        }
      },
      "example": {
        "name": "Updated Campaign Name",
        "cost": 0.15,
        "status": "active"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_conversion_id_clone": {
    "method": "GET",
    "path": "/public/api/v1/conversion/{id}/clone",
    "summary": "Clone Conversion.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_conversion": {
    "method": "POST",
    "path": "/public/api/v1/conversion",
    "summary": "Create Conversion.",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "get_public_api_v1_conversion_id": {
    "method": "GET",
    "path": "/public/api/v1/conversion/{id}",
    "summary": "Get Conversion.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_conversion_id": {
    "method": "PUT",
    "path": "/public/api/v1/conversion/{id}",
    "summary": "Edit Conversion.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "delete_public_api_v1_conversion_id": {
    "method": "DELETE",
    "path": "/public/api/v1/conversion/{id}",
    "summary": "Delete Conversion.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "patch_public_api_v1_conversion_id": {
    "method": "PATCH",
    "path": "/public/api/v1/conversion/{id}",
    "summary": "Restore Conversion.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Restored/Modified successfully",
        "example": {
          "message": "Resource restored successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_conversion_list_filtered": {
    "method": "GET",
    "path": "/public/api/v1/conversion/list/filtered",
    "summary": "Get Conversion list filtered.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      },
      {
        "name": "sortColumn",
        "type": "string",
        "required": false,
        "description": "Column to sort by",
        "in": "query"
      },
      {
        "name": "sortType",
        "type": "string",
        "required": false,
        "description": "Sort direction",
        "in": "query",
        "enum": [
          "asc",
          "desc"
        ]
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_conversion_id_rename": {
    "method": "PUT",
    "path": "/public/api/v1/conversion/{id}/rename",
    "summary": "Rename Conversion.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_domain_id_clone": {
    "method": "GET",
    "path": "/public/api/v1/domain/{id}/clone",
    "summary": "Clone Domain.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_domain": {
    "method": "POST",
    "path": "/public/api/v1/domain",
    "summary": "Create Domain.",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "get_public_api_v1_domain_id": {
    "method": "GET",
    "path": "/public/api/v1/domain/{id}",
    "summary": "Get Domain.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_domain_id": {
    "method": "PUT",
    "path": "/public/api/v1/domain/{id}",
    "summary": "Edit Domain.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "delete_public_api_v1_domain_id": {
    "method": "DELETE",
    "path": "/public/api/v1/domain/{id}",
    "summary": "Delete Domain.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "patch_public_api_v1_domain_id": {
    "method": "PATCH",
    "path": "/public/api/v1/domain/{id}",
    "summary": "Restore Domain.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Restored/Modified successfully",
        "example": {
          "message": "Resource restored successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_domain_list_filtered": {
    "method": "GET",
    "path": "/public/api/v1/domain/list/filtered",
    "summary": "Get Domain list filtered.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      },
      {
        "name": "sortColumn",
        "type": "string",
        "required": false,
        "description": "Column to sort by",
        "in": "query"
      },
      {
        "name": "sortType",
        "type": "string",
        "required": false,
        "description": "Sort direction",
        "in": "query",
        "enum": [
          "asc",
          "desc"
        ]
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_domain_id_rename": {
    "method": "PUT",
    "path": "/public/api/v1/domain/{id}/rename",
    "summary": "Rename Domain.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_group_id_clone": {
    "method": "GET",
    "path": "/public/api/v1/group/{id}/clone",
    "summary": "Clone Group.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_group": {
    "method": "POST",
    "path": "/public/api/v1/group",
    "summary": "Create Group.",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "get_public_api_v1_group_id": {
    "method": "GET",
    "path": "/public/api/v1/group/{id}",
    "summary": "Get Group.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_group_id": {
    "method": "PUT",
    "path": "/public/api/v1/group/{id}",
    "summary": "Edit Group.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "delete_public_api_v1_group_id": {
    "method": "DELETE",
    "path": "/public/api/v1/group/{id}",
    "summary": "Delete Group.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "patch_public_api_v1_group_id": {
    "method": "PATCH",
    "path": "/public/api/v1/group/{id}",
    "summary": "Restore Group.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Restored/Modified successfully",
        "example": {
          "message": "Resource restored successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_group_list_filtered": {
    "method": "GET",
    "path": "/public/api/v1/group/list/filtered",
    "summary": "Get Group list filtered.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      },
      {
        "name": "sortColumn",
        "type": "string",
        "required": false,
        "description": "Column to sort by",
        "in": "query"
      },
      {
        "name": "sortType",
        "type": "string",
        "required": false,
        "description": "Sort direction",
        "in": "query",
        "enum": [
          "asc",
          "desc"
        ]
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_group_id_rename": {
    "method": "PUT",
    "path": "/public/api/v1/group/{id}/rename",
    "summary": "Rename Group.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_landing_id_clone": {
    "method": "GET",
    "path": "/public/api/v1/landing/{id}/clone",
    "summary": "Clone Landing.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_landing": {
    "method": "POST",
    "path": "/public/api/v1/landing",
    "summary": "Create Landing.",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Landing page name"
          },
          "url": {
            "type": "string",
            "description": "Landing page URL"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "paused"
            ],
            "description": "Landing status"
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "example": {
        "name": "Main Landing Page",
        "url": "https://example.com/landing",
        "status": "active"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "get_public_api_v1_landing_id": {
    "method": "GET",
    "path": "/public/api/v1/landing/{id}",
    "summary": "Get Landing.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_landing_id": {
    "method": "PUT",
    "path": "/public/api/v1/landing/{id}",
    "summary": "Edit Landing.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Landing page name"
          },
          "url": {
            "type": "string",
            "description": "Landing page URL"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "paused"
            ],
            "description": "Landing status"
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "example": {
        "name": "Main Landing Page",
        "url": "https://example.com/landing",
        "status": "active"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "delete_public_api_v1_landing_id": {
    "method": "DELETE",
    "path": "/public/api/v1/landing/{id}",
    "summary": "Delete Landing.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "patch_public_api_v1_landing_id": {
    "method": "PATCH",
    "path": "/public/api/v1/landing/{id}",
    "summary": "Restore Landing.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Landing page name"
          },
          "url": {
            "type": "string",
            "description": "Landing page URL"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "paused"
            ],
            "description": "Landing status"
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "example": {
        "name": "Main Landing Page",
        "url": "https://example.com/landing",
        "status": "active"
      }
    },
    "responses": {
      "200": {
        "description": "Restored/Modified successfully",
        "example": {
          "message": "Resource restored successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_landing_list_filtered": {
    "method": "GET",
    "path": "/public/api/v1/landing/list/filtered",
    "summary": "Get Landing list filtered.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      },
      {
        "name": "sortColumn",
        "type": "string",
        "required": false,
        "description": "Column to sort by",
        "in": "query"
      },
      {
        "name": "sortType",
        "type": "string",
        "required": false,
        "description": "Sort direction",
        "in": "query",
        "enum": [
          "asc",
          "desc"
        ]
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_landing_id_rename": {
    "method": "PUT",
    "path": "/public/api/v1/landing/{id}/rename",
    "summary": "Rename Landing.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Landing page name"
          },
          "url": {
            "type": "string",
            "description": "Landing page URL"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "paused"
            ],
            "description": "Landing status"
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "example": {
        "name": "Main Landing Page",
        "url": "https://example.com/landing",
        "status": "active"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_offer_id_clone": {
    "method": "GET",
    "path": "/public/api/v1/offer/{id}/clone",
    "summary": "Clone Offer.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_offer": {
    "method": "POST",
    "path": "/public/api/v1/offer",
    "summary": "Create Offer.",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Offer name"
          },
          "url": {
            "type": "string",
            "description": "Offer URL"
          },
          "payout": {
            "type": "number",
            "description": "Payout amount"
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "example": {
        "name": "Premium Offer",
        "url": "https://affiliate.com/offer",
        "payout": 50.0
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "get_public_api_v1_offer_id": {
    "method": "GET",
    "path": "/public/api/v1/offer/{id}",
    "summary": "Get Offer.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_offer_id": {
    "method": "PUT",
    "path": "/public/api/v1/offer/{id}",
    "summary": "Edit Offer.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Offer name"
          },
          "url": {
            "type": "string",
            "description": "Offer URL"
          },
          "payout": {
            "type": "number",
            "description": "Payout amount"
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "example": {
        "name": "Premium Offer",
        "url": "https://affiliate.com/offer",
        "payout": 50.0
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "delete_public_api_v1_offer_id": {
    "method": "DELETE",
    "path": "/public/api/v1/offer/{id}",
    "summary": "Delete Offer.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "patch_public_api_v1_offer_id": {
    "method": "PATCH",
    "path": "/public/api/v1/offer/{id}",
    "summary": "Restore Offer.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Offer name"
          },
          "url": {
            "type": "string",
            "description": "Offer URL"
          },
          "payout": {
            "type": "number",
            "description": "Payout amount"
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "example": {
        "name": "Premium Offer",
        "url": "https://affiliate.com/offer",
        "payout": 50.0
      }
    },
    "responses": {
      "200": {
        "description": "Restored/Modified successfully",
        "example": {
          "message": "Resource restored successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_offer_list_filtered": {
    "method": "GET",
    "path": "/public/api/v1/offer/list/filtered",
    "summary": "Get Offer list filtered.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      },
      {
        "name": "sortColumn",
        "type": "string",
        "required": false,
        "description": "Column to sort by",
        "in": "query"
      },
      {
        "name": "sortType",
        "type": "string",
        "required": false,
        "description": "Sort direction",
        "in": "query",
        "enum": [
          "asc",
          "desc"
        ]
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_offer_id_rename": {
    "method": "PUT",
    "path": "/public/api/v1/offer/{id}/rename",
    "summary": "Rename Offer.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Offer name"
          },
          "url": {
            "type": "string",
            "description": "Offer URL"
          },
          "payout": {
            "type": "number",
            "description": "Payout amount"
          }
        },
        "required": [
          "name",
          "url"
        ]
      },
      "example": {
        "name": "Premium Offer",
        "url": "https://affiliate.com/offer",
        "payout": 50.0
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_rotation_id_clone": {
    "method": "GET",
    "path": "/public/api/v1/rotation/{id}/clone",
    "summary": "Clone Rotation.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_rotation": {
    "method": "POST",
    "path": "/public/api/v1/rotation",
    "summary": "Create Rotation.",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "get_public_api_v1_rotation_id": {
    "method": "GET",
    "path": "/public/api/v1/rotation/{id}",
    "summary": "Get Rotation.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_rotation_id": {
    "method": "PUT",
    "path": "/public/api/v1/rotation/{id}",
    "summary": "Edit Rotation.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "delete_public_api_v1_rotation_id": {
    "method": "DELETE",
    "path": "/public/api/v1/rotation/{id}",
    "summary": "Delete Rotation.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "patch_public_api_v1_rotation_id": {
    "method": "PATCH",
    "path": "/public/api/v1/rotation/{id}",
    "summary": "Restore Rotation.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Restored/Modified successfully",
        "example": {
          "message": "Resource restored successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_rotation_list_filtered": {
    "method": "GET",
    "path": "/public/api/v1/rotation/list/filtered",
    "summary": "Get Rotation list filtered.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      },
      {
        "name": "sortColumn",
        "type": "string",
        "required": false,
        "description": "Column to sort by",
        "in": "query"
      },
      {
        "name": "sortType",
        "type": "string",
        "required": false,
        "description": "Sort direction",
        "in": "query",
        "enum": [
          "asc",
          "desc"
        ]
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_rotation_id_rename": {
    "method": "PUT",
    "path": "/public/api/v1/rotation/{id}/rename",
    "summary": "Rename Rotation.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_traffic_source_id_clone": {
    "method": "GET",
    "path": "/public/api/v1/traffic_source/{id}/clone",
    "summary": "Clone Traffic Source.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_traffic_source": {
    "method": "POST",
    "path": "/public/api/v1/traffic_source",
    "summary": "Create Traffic Source.",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "get_public_api_v1_traffic_source_id": {
    "method": "GET",
    "path": "/public/api/v1/traffic_source/{id}",
    "summary": "Get Traffic Source.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_traffic_source_id": {
    "method": "PUT",
    "path": "/public/api/v1/traffic_source/{id}",
    "summary": "Edit Traffic Source.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "delete_public_api_v1_traffic_source_id": {
    "method": "DELETE",
    "path": "/public/api/v1/traffic_source/{id}",
    "summary": "Delete Traffic Source.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "patch_public_api_v1_traffic_source_id": {
    "method": "PATCH",
    "path": "/public/api/v1/traffic_source/{id}",
    "summary": "Restore Traffic Source.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Restored/Modified successfully",
        "example": {
          "message": "Resource restored successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_traffic_source_list_filtered": {
    "method": "GET",
    "path": "/public/api/v1/traffic_source/list/filtered",
    "summary": "Get Traffic Source list filtered.",
    "parameters": [
      {
        "name": "datePreset",
        "type": "string",
        "required": true,
        "description": "Time period filter (e.g., 'last_7_days', 'today', 'yesterday')",
        "in": "query",
        "enum": [
          "today",
          "yesterday",
          "this_week",
          "last_week",
          "last_7_days",
          "last_14_days",
          "last_30_days",
          "this_month",
          "last_month",
          "this_year",
          "last_year",
          "all_time",
          "custom_time"
        ]
      },
      {
        "name": "timezone",
        "type": "string",
        "required": true,
        "description": "Timezone for date calculations (e.g., 'UTC')",
        "in": "query",
        "default": "UTC"
      },
      {
        "name": "limit",
        "type": "integer",
        "required": false,
        "description": "Maximum number of records to return (max 1000)",
        "in": "query",
        "default": 100
      },
      {
        "name": "offset",
        "type": "integer",
        "required": false,
        "description": "Number of records to skip for pagination",
        "in": "query",
        "default": 0
      },
      {
        "name": "sortColumn",
        "type": "string",
        "required": false,
        "description": "Column to sort by",
        "in": "query"
      },
      {
        "name": "sortType",
        "type": "string",
        "required": false,
        "description": "Sort direction",
        "in": "query",
        "enum": [
          "asc",
          "desc"
        ]
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_traffic_source_templates": {
    "method": "GET",
    "path": "/public/api/v1/traffic_source_templates",
    "summary": "Get Traffic Source Templates.",
    "parameters": [],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_traffic_source_id_rename": {
    "method": "PUT",
    "path": "/public/api/v1/traffic_source/{id}/rename",
    "summary": "Rename Traffic Source.",
    "parameters": [
      {
        "name": "id",
        "type": "integer",
        "required": true,
        "description": "Id identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_trends": {
    "method": "GET",
    "path": "/public/api/v1/trends",
    "summary": "Get Trends.",
    "parameters": [],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_user_change_login": {
    "method": "PUT",
    "path": "/public/api/v1/user/change_login",
    "summary": "Change User Login.",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_user_change_password": {
    "method": "PUT",
    "path": "/public/api/v1/user/change_password",
    "summary": "Change User Password.",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_user_create": {
    "method": "POST",
    "path": "/public/api/v1/user/create",
    "summary": "Create User",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "delete_public_api_v1_user_userId": {
    "method": "DELETE",
    "path": "/public/api/v1/user/{userId}",
    "summary": "Delete User.",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": true,
        "description": "Userid identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Deleted successfully",
        "example": {
          "message": "Resource deleted successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_user_adminId_can_create_users": {
    "method": "GET",
    "path": "/public/api/v1/user/{adminId}/can_create_users",
    "summary": "Get information about admin's ability to create users",
    "parameters": [
      {
        "name": "adminId",
        "type": "string",
        "required": true,
        "description": "Adminid identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_user_adminId_can_create_users": {
    "method": "PUT",
    "path": "/public/api/v1/user/{adminId}/can_create_users",
    "summary": "Set if admin can create another users.",
    "parameters": [
      {
        "name": "adminId",
        "type": "string",
        "required": true,
        "description": "Adminid identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_user_userId_hide_profit": {
    "method": "GET",
    "path": "/public/api/v1/user/{userId}/hide_profit",
    "summary": "HideProfit Info.",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": true,
        "description": "Userid identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_user_userId_hide_profit": {
    "method": "PUT",
    "path": "/public/api/v1/user/{userId}/hide_profit",
    "summary": "Edit User HideProfit.",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": true,
        "description": "Userid identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_user_userId_permissions": {
    "method": "PUT",
    "path": "/public/api/v1/user/{userId}/permissions",
    "summary": "Edit User Permissions.",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": true,
        "description": "Userid identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_user_userId_edit": {
    "method": "PUT",
    "path": "/public/api/v1/user/{userId}/edit",
    "summary": "Edit User.",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": true,
        "description": "Userid identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_user_log": {
    "method": "GET",
    "path": "/public/api/v1/user/log",
    "summary": "Get Users Events log.",
    "parameters": [],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_user_log_types": {
    "method": "GET",
    "path": "/public/api/v1/user/log/types",
    "summary": "Get Users Events log.",
    "parameters": [],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_user_2fa_disable": {
    "method": "POST",
    "path": "/public/api/v1/user/2fa/disable",
    "summary": "Disable two-factor verification for current user",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "post_public_api_v1_user_2fa_enable": {
    "method": "POST",
    "path": "/public/api/v1/user/2fa/enable",
    "summary": "Enable two-factor verification for current user",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "put_public_api_v1_user_2fa_secret_generate": {
    "method": "PUT",
    "path": "/public/api/v1/user/2fa/secret/generate",
    "summary": "Generate two-factor secrets for current user, when two-factor authentication is disabled",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_user_2fa_status": {
    "method": "GET",
    "path": "/public/api/v1/user/2fa/status",
    "summary": "Get information about if two-factor verification enabled for current user",
    "parameters": [],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_identity_cookie": {
    "method": "GET",
    "path": "/public/api/v1/identity/cookie",
    "summary": "Get cookie settings.",
    "parameters": [],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "put_public_api_v1_identity_cookie": {
    "method": "PUT",
    "path": "/public/api/v1/identity/cookie",
    "summary": "Edit cookie settings.",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "200": {
        "description": "Updated successfully",
        "example": {
          "message": "Resource updated successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_identity_userId_clone": {
    "method": "GET",
    "path": "/public/api/v1/identity/{userId}/clone",
    "summary": "Identity Clone.",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": true,
        "description": "Userid identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_identity_userId": {
    "method": "GET",
    "path": "/public/api/v1/identity/{userId}",
    "summary": "Identity Info.",
    "parameters": [
      {
        "name": "userId",
        "type": "string",
        "required": true,
        "description": "Userid identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_identity_users_get": {
    "method": "GET",
    "path": "/public/api/v1/identity/users/get",
    "summary": "Identity Users.",
    "parameters": [],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_user_adminId_accessible-users": {
    "method": "GET",
    "path": "/public/api/v1/user/{adminId}/accessible-users",
    "summary": "Accessible Users of Admin.",
    "parameters": [
      {
        "name": "adminId",
        "type": "string",
        "required": true,
        "description": "Adminid identifier",
        "in": "path"
      }
    ],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_user_adminId_accessible-users": {
    "method": "POST",
    "path": "/public/api/v1/user/{adminId}/accessible-users",
    "summary": "Set Accessible Users for Admin.",
    "parameters": [
      {
        "name": "adminId",
        "type": "string",
        "required": true,
        "description": "Adminid identifier",
        "in": "path"
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  },
  "get_public_api_v1_users_accessible": {
    "method": "GET",
    "path": "/public/api/v1/users/accessible",
    "summary": "Accessible Users.",
    "parameters": [],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "get_public_api_v1_user_role": {
    "method": "GET",
    "path": "/public/api/v1/user/role",
    "summary": "User Role.",
    "parameters": [],
    "requestBody": null,
    "responses": {
      "200": {
        "description": "Success",
        "example": [
          {
            "id": 1,
            "name": "Example Item",
            "status": "active",
            "createdAt": "2025-09-27T00:00:00Z"
          }
        ]
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      },
      "404": {
        "description": "Not Found - Resource not found",
        "example": {
          "error": "Resource not found"
        }
      }
    }
  },
  "post_public_api_v1_user_logout": {
    "method": "POST",
    "path": "/public/api/v1/user/logout",
    "summary": "User Logout.",
    "parameters": [],
    "requestBody": {
      "contentType": "application/json",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Resource name"
          }
        }
      },
      "example": {
        "name": "Example Resource"
      }
    },
    "responses": {
      "201": {
        "description": "Created successfully",
        "example": {
          "id": 123,
          "message": "Resource created successfully"
        }
      },
      "400": {
        "description": "Bad Request - Invalid parameters",
        "example": {
          "error": "Invalid parameters. Check datePreset and timezone."
        }
      },
      "401": {
        "description": "Unauthorized - Invalid API key",
        "example": {
          "error": "Invalid API key"
        }
      },
      "403": {
        "description": "Forbidden - Access denied",
        "example": {
          "error": "Access denied"
        }
      }
    }
  }
}