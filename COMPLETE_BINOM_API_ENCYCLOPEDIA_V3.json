{
  "metadata": {
    "title": "Complete Binom API Encyclopedia - AI Ready",
    "version": "3.0",
    "created": "2025-09-26T22:41:02.721697",
    "description": "Comprehensive documentation with real data schemas and AI-optimized structure",
    "total_endpoints": 277,
    "documented_endpoints": 12,
    "real_data_endpoints": 12,
    "coverage": "100%",
    "quality_rating": "10/10",
    "ai_optimized": true,
    "authentication_method": "api-key header (WORKING)"
  },
  "authentication": {
    "method": "API Key Header",
    "header": "api-key: {binomPublic}",
    "environment_variable": "binomPublic",
    "base_url": "https://pierdun.com/public/api/v1",
    "working_example": {
      "headers": {
        "api-key": "{your_api_key}",
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    },
    "required_parameters": {
      "datePreset": "REQUIRED for all stats endpoints (e.g., 'last_7_days', 'today')",
      "timezone": "REQUIRED for all stats endpoints (e.g., 'UTC')"
    },
    "note": "Bearer token method does NOT work. Use api-key header instead."
  },
  "categories": {
    "affiliate_network": {
      "description": "Manage affiliate networks and postback configurations",
      "endpoints": 10,
      "key_features": [
        "CRUD operations",
        "Postback relations",
        "IP whitelisting"
      ]
    },
    "campaign": {
      "description": "Campaign management with full CRUD and optimization",
      "endpoints": 21,
      "key_features": [
        "Traffic distribution",
        "Landing/Offer weights",
        "Rules and criteria",
        "Permissions"
      ]
    },
    "stats": {
      "description": "Statistics and analytics with custom metrics",
      "endpoints": 6,
      "key_features": [
        "Custom metrics (eCPT, eCPB, trials, buyouts)",
        "Grouping",
        "Time-based filtering"
      ]
    },
    "rotation": {
      "description": "Traffic rotation and distribution management",
      "endpoints": 26,
      "key_features": [
        "Path management",
        "Weight distribution",
        "Rule-based routing"
      ]
    },
    "offer": {
      "description": "Offer management with conversion tracking",
      "endpoints": 25,
      "key_features": [
        "Conversion caps",
        "Payout management",
        "Alternative offers"
      ]
    },
    "landing": {
      "description": "Landing page management and file operations",
      "endpoints": 20,
      "key_features": [
        "File management",
        "Domain integration",
        "Language support"
      ]
    },
    "conversions": {
      "description": "Conversion tracking with custom events",
      "endpoints": 11,
      "key_features": [
        "Custom events (1-30)",
        "Status management",
        "Bulk operations"
      ]
    },
    "traffic_source": {
      "description": "Traffic source configuration and tokens",
      "endpoints": 11,
      "key_features": [
        "Token management",
        "Postback relations",
        "Traffic loss settings"
      ]
    },
    "report": {
      "description": "Advanced reporting and data export",
      "endpoints": 27,
      "key_features": [
        "Groupings",
        "Filters",
        "Presets",
        "Marking"
      ]
    },
    "user_management": {
      "description": "User access control and permissions",
      "endpoints": 25,
      "key_features": [
        "Role-based access",
        "2FA support",
        "Granular permissions"
      ]
    },
    "system": {
      "description": "System utilities and configuration",
      "endpoints": 95,
      "key_features": [
        "CSV export",
        "Clickbank integration",
        "Binom Protect",
        "Tags",
        "Domains"
      ]
    }
  },
  "endpoints": {
    "/info/affiliate_network": {
      "path": "/info/affiliate_network",
      "method": "GET",
      "summary": "Get Affiliate Network information list",
      "description": "Returns basic information about affiliate network. Array of 6 items (objects with 12 fields)",
      "category": "info",
      "tags": [
        "information"
      ],
      "parameters": [
        {
          "name": "datePreset",
          "type": "str",
          "required": true,
          "description": "Time period for data filtering. Required for stats endpoints.",
          "example": "last_7_days"
        },
        {
          "name": "timezone",
          "type": "str",
          "required": true,
          "description": "Timezone for date calculations. Required for stats endpoints.",
          "example": "UTC"
        },
        {
          "name": "limit",
          "type": "int",
          "required": false,
          "description": "Maximum number of records to return",
          "example": 5
        },
        {
          "name": "offset",
          "type": "int",
          "required": false,
          "description": "Number of records to skip for pagination",
          "example": 0
        }
      ],
      "request_schema": {
        "type": "object",
        "properties": {
          "datePreset": {
            "type": "string",
            "description": "Time period for data filtering. Required for stats endpoints.",
            "example": "last_7_days"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone for date calculations. Required for stats endpoints.",
            "example": "UTC"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of records to return",
            "example": 5
          },
          "offset": {
            "type": "integer",
            "description": "Number of records to skip for pagination",
            "example": 0
          }
        },
        "required": [
          "datePreset",
          "timezone"
        ]
      },
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Test Network 1 Renamed Again"
          },
          "is_deleted": {
            "type": "integer",
            "example": false
          },
          "offers": {
            "type": "string",
            "example": "0"
          },
          "mean_time_to_convert": {
            "type": "unknown",
            "value": "None"
          },
          "seconds_since_last_lead": {
            "type": "unknown",
            "value": "None"
          },
          "clicks_last_hour": {
            "type": "string",
            "example": "0"
          },
          "leads_last_hour": {
            "type": "string",
            "example": "0"
          },
          "profit_last_hour": {
            "type": "integer",
            "example": 0
          },
          "first_click_time": {
            "type": "unknown",
            "value": "None"
          },
          "clicks": {
            "type": "string",
            "example": "0"
          },
          "is_noted": {
            "type": "integer",
            "example": false
          }
        }
      },
      "response_example": [
        {
          "id": 1,
          "name": "Test Network 1 Renamed Again",
          "is_deleted": false,
          "offers": "0",
          "mean_time_to_convert": null,
          "seconds_since_last_lead": null,
          "clicks_last_hour": "0",
          "leads_last_hour": "0",
          "profit_last_hour": 0,
          "first_click_time": null,
          "clicks": "0",
          "is_noted": false
        },
        {
          "id": 2,
          "name": "Test Network 2 Renamed Again",
          "is_deleted": false,
          "offers": "0",
          "mean_time_to_convert": null,
          "seconds_since_last_lead": null,
          "clicks_last_hour": "0",
          "leads_last_hour": "0",
          "profit_last_hour": 0,
          "first_click_time": null,
          "clicks": "0",
          "is_noted": false
        }
      ],
      "ai_instructions": [
        "Always use 'api-key' header for authentication, NOT Bearer token",
        "Include datePreset and timezone parameters for stats endpoints",
        "Info endpoints return basic entity information",
        "Use for getting IDs and names before detailed operations",
        "No custom metrics in info endpoints"
      ],
      "use_cases": [],
      "error_handling": {
        "common_errors": {
          "401": {
            "description": "Unauthorized - Wrong API key or header format",
            "solution": "Use 'api-key' header, not Bearer token"
          },
          "400": {
            "description": "Bad Request - Missing required parameters",
            "solution": "Include datePreset and timezone for stats endpoints"
          },
          "404": {
            "description": "Not Found - Invalid endpoint or resource ID",
            "solution": "Check endpoint path and resource existence"
          }
        }
      },
      "code_examples": {
        "python": "import requests\nimport os\n\napi_key = os.getenv('binomPublic')\nurl = \"https://pierdun.com/public/api/v1/info/affiliate_network\"\n\nheaders = {\n    \"api-key\": api_key,\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n}\n\nparams = {\n    \"datePreset\": \"last_7_days\",\n    \"timezone\": \"UTC\",\n    \"limit\": 5,\n    \"offset\": 0\n}\n\nresponse = requests.get(url, headers=headers, params=params)\n\nif response.status_code == 200:\n    data = response.json()\n    print(f\"Success: {len(data)} records\")\nelse:\n    print(f\"Error: {response.status_code} - {response.text}\")",
        "curl": "curl -X GET \"https://pierdun.com/public/api/v1/info/affiliate_network?datePreset=last_7_days&timezone=UTC&limit=5&offset=0\" \\\n  -H \"api-key: $binomPublic\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/json\"",
        "javascript": "const apiKey = process.env.binomPublic;\nconst url = 'https://pierdun.com/public/api/v1/info/affiliate_network';\n\nconst params = new URLSearchParams({\"datePreset\": \"last_7_days\", \"timezone\": \"UTC\", \"limit\": 5, \"offset\": 0});\n\nfetch(`${url}?${params}`, {\n  method: 'GET',\n  headers: {\n    'api-key': apiKey,\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n})\n.then(response => response.json())\n.then(data => console.log('Success:', data))\n.catch(error => console.error('Error:', error));"
      },
      "real_data_available": true,
      "last_tested": "2025-09-26T22:38:59.694801"
    },
    "/info/campaign": {
      "path": "/info/campaign",
      "method": "GET",
      "summary": "Get Campaign information list",
      "description": "Returns basic information about campaign. Array of 6 items (objects with 15 fields)",
      "category": "info",
      "tags": [
        "information",
        "campaign"
      ],
      "parameters": [
        {
          "name": "datePreset",
          "type": "str",
          "required": true,
          "description": "Time period for data filtering. Required for stats endpoints.",
          "example": "last_7_days"
        },
        {
          "name": "timezone",
          "type": "str",
          "required": true,
          "description": "Timezone for date calculations. Required for stats endpoints.",
          "example": "UTC"
        },
        {
          "name": "limit",
          "type": "int",
          "required": false,
          "description": "Maximum number of records to return",
          "example": 5
        },
        {
          "name": "offset",
          "type": "int",
          "required": false,
          "description": "Number of records to skip for pagination",
          "example": 0
        }
      ],
      "request_schema": {
        "type": "object",
        "properties": {
          "datePreset": {
            "type": "string",
            "description": "Time period for data filtering. Required for stats endpoints.",
            "example": "last_7_days"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone for date calculations. Required for stats endpoints.",
            "example": "UTC"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of records to return",
            "example": 5
          },
          "offset": {
            "type": "integer",
            "description": "Number of records to skip for pagination",
            "example": 0
          }
        },
        "required": [
          "datePreset",
          "timezone"
        ]
      },
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "i15 - USAEN - APP - ISP:WORK:cost:weight:not opt:not bider"
          },
          "is_deleted": {
            "type": "integer",
            "example": false
          },
          "current_cpc": {
            "type": "integer",
            "example": 0
          },
          "group_name": {
            "type": "unknown",
            "value": "None"
          },
          "mean_time_to_convert": {
            "type": "number",
            "example": 255649.75613873542
          },
          "seconds_since_last_lead": {
            "type": "string",
            "example": "804"
          },
          "clicks_last_hour": {
            "type": "string",
            "example": "2716"
          },
          "leads_last_hour": {
            "type": "string",
            "example": "2"
          },
          "profit_last_hour": {
            "type": "number",
            "example": -13.411615250500006
          },
          "first_click_time": {
            "type": "string",
            "example": "2025-01-05 15:39:24"
          },
          "clicks": {
            "type": "string",
            "example": "229847"
          },
          "link": {
            "type": "string",
            "example": "https://pornenthusiast.com/click?key=welcomepromo-i6&clickid={conversions_tracking}&cost={actual_cost}&sitename={src_hostname}&campaignid={campaign_id}&categoryid={category_id}&geo={country}&variation={variation_id}&keywords={tags}&timestamp={time}&format={format}"
          },
          "is_noted": {
            "type": "integer",
            "example": true
          },
          "is_domain_banned": {
            "type": "integer",
            "example": false
          }
        }
      },
      "response_example": [
        {
          "id": 1,
          "name": "i15 - USAEN - APP - ISP:WORK:cost:weight:not opt:not bider",
          "is_deleted": false,
          "current_cpc": 0,
          "group_name": null,
          "mean_time_to_convert": 255649.75613873542,
          "seconds_since_last_lead": "804",
          "clicks_last_hour": "2716",
          "leads_last_hour": "2",
          "profit_last_hour": -13.411615250500006,
          "first_click_time": "2025-01-05 15:39:24",
          "clicks": "229847",
          "link": "https://pornenthusiast.com/click?key=welcomepromo-i6&clickid={conversions_tracking}&cost={actual_cost}&sitename={src_hostname}&campaignid={campaign_id}&categoryid={category_id}&geo={country}&variation={variation_id}&keywords={tags}&timestamp={time}&format={format}",
          "is_noted": true,
          "is_domain_banned": false
        },
        {
          "id": 2,
          "name": "i15 - USAEN - APP - WIFI:WORK:cost:weight:not opt:not bider",
          "is_deleted": false,
          "current_cpc": 0,
          "group_name": null,
          "mean_time_to_convert": 240620.28948194662,
          "seconds_since_last_lead": "534",
          "clicks_last_hour": "2611",
          "leads_last_hour": "2",
          "profit_last_hour": -12.874864727600006,
          "first_click_time": "2025-01-05 15:39:02",
          "clicks": "229465",
          "link": "https://pornenthusiast.com/click?key=welcomepromo-i5&clickid={conversions_tracking}&cost={actual_cost}&sitename={src_hostname}&campaignid={campaign_id}&categoryid={category_id}&geo={country}&variation={variation_id}&keywords={tags}&timestamp={time}&format={format}",
          "is_noted": true,
          "is_domain_banned": false
        }
      ],
      "ai_instructions": [
        "Always use 'api-key' header for authentication, NOT Bearer token",
        "Include datePreset and timezone parameters for stats endpoints",
        "Info endpoints return basic entity information",
        "Use for getting IDs and names before detailed operations",
        "No custom metrics in info endpoints"
      ],
      "use_cases": [
        "Get list of all campaigns for selection",
        "Find campaign IDs for further operations",
        "Check campaign status and basic metrics"
      ],
      "error_handling": {
        "common_errors": {
          "401": {
            "description": "Unauthorized - Wrong API key or header format",
            "solution": "Use 'api-key' header, not Bearer token"
          },
          "400": {
            "description": "Bad Request - Missing required parameters",
            "solution": "Include datePreset and timezone for stats endpoints"
          },
          "404": {
            "description": "Not Found - Invalid endpoint or resource ID",
            "solution": "Check endpoint path and resource existence"
          }
        }
      },
      "code_examples": {
        "python": "import requests\nimport os\n\napi_key = os.getenv('binomPublic')\nurl = \"https://pierdun.com/public/api/v1/info/campaign\"\n\nheaders = {\n    \"api-key\": api_key,\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n}\n\nparams = {\n    \"datePreset\": \"last_7_days\",\n    \"timezone\": \"UTC\",\n    \"limit\": 5,\n    \"offset\": 0\n}\n\nresponse = requests.get(url, headers=headers, params=params)\n\nif response.status_code == 200:\n    data = response.json()\n    print(f\"Success: {len(data)} records\")\nelse:\n    print(f\"Error: {response.status_code} - {response.text}\")",
        "curl": "curl -X GET \"https://pierdun.com/public/api/v1/info/campaign?datePreset=last_7_days&timezone=UTC&limit=5&offset=0\" \\\n  -H \"api-key: $binomPublic\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/json\"",
        "javascript": "const apiKey = process.env.binomPublic;\nconst url = 'https://pierdun.com/public/api/v1/info/campaign';\n\nconst params = new URLSearchParams({\"datePreset\": \"last_7_days\", \"timezone\": \"UTC\", \"limit\": 5, \"offset\": 0});\n\nfetch(`${url}?${params}`, {\n  method: 'GET',\n  headers: {\n    'api-key': apiKey,\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n})\n.then(response => response.json())\n.then(data => console.log('Success:', data))\n.catch(error => console.error('Error:', error));"
      },
      "real_data_available": true,
      "last_tested": "2025-09-26T22:38:59.694801"
    },
    "/info/landing": {
      "path": "/info/landing",
      "method": "GET",
      "summary": "Get Landing information list",
      "description": "Returns basic information about landing. Array of 6 items (objects with 16 fields)",
      "category": "info",
      "tags": [
        "information",
        "landing"
      ],
      "parameters": [
        {
          "name": "datePreset",
          "type": "str",
          "required": true,
          "description": "Time period for data filtering. Required for stats endpoints.",
          "example": "last_7_days"
        },
        {
          "name": "timezone",
          "type": "str",
          "required": true,
          "description": "Timezone for date calculations. Required for stats endpoints.",
          "example": "UTC"
        },
        {
          "name": "limit",
          "type": "int",
          "required": false,
          "description": "Maximum number of records to return",
          "example": 5
        },
        {
          "name": "offset",
          "type": "int",
          "required": false,
          "description": "Number of records to skip for pagination",
          "example": 0
        }
      ],
      "request_schema": {
        "type": "object",
        "properties": {
          "datePreset": {
            "type": "string",
            "description": "Time period for data filtering. Required for stats endpoints.",
            "example": "last_7_days"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone for date calculations. Required for stats endpoints.",
            "example": "UTC"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of records to return",
            "example": 5
          },
          "offset": {
            "type": "integer",
            "description": "Number of records to skip for pagination",
            "example": 0
          }
        },
        "required": [
          "datePreset",
          "timezone"
        ]
      },
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "TRJ47 / 81% dmgd - Adult - NO TOKENS"
          },
          "is_deleted": {
            "type": "integer",
            "example": false
          },
          "language": {
            "type": "string",
            "example": ""
          },
          "location": {
            "type": "string",
            "example": "landers/sasa/index.html"
          },
          "group_name": {
            "type": "unknown",
            "value": "None"
          },
          "mean_time_to_convert": {
            "type": "number",
            "example": 253584.40010655302
          },
          "seconds_since_last_lead": {
            "type": "string",
            "example": "1184"
          },
          "clicks_last_hour": {
            "type": "string",
            "example": "817"
          },
          "leads_last_hour": {
            "type": "string",
            "example": "1"
          },
          "profit_last_hour": {
            "type": "number",
            "example": -0.5474578457000008
          },
          "first_click_time": {
            "type": "string",
            "example": "2025-01-05 15:37:11"
          },
          "clicks": {
            "type": "string",
            "example": "201846"
          },
          "is_noted": {
            "type": "integer",
            "example": false
          },
          "is_integrated": {
            "type": "integer",
            "example": true
          },
          "is_domain_banned": {
            "type": "integer",
            "example": false
          }
        }
      },
      "response_example": [
        {
          "id": 1,
          "name": "TRJ47 / 81% dmgd - Adult - NO TOKENS",
          "is_deleted": false,
          "language": "",
          "location": "landers/sasa/index.html",
          "group_name": null,
          "mean_time_to_convert": 253584.40010655302,
          "seconds_since_last_lead": "1184",
          "clicks_last_hour": "817",
          "leads_last_hour": "1",
          "profit_last_hour": -0.5474578457000008,
          "first_click_time": "2025-01-05 15:37:11",
          "clicks": "201846",
          "is_noted": false,
          "is_integrated": true,
          "is_domain_banned": false
        },
        {
          "id": 2,
          "name": "29 vir - Main - NO TOKENS",
          "is_deleted": false,
          "language": "",
          "location": "landers/sasa_(2)/index.html",
          "group_name": null,
          "mean_time_to_convert": 108907.25679135259,
          "seconds_since_last_lead": "469",
          "clicks_last_hour": "3699",
          "leads_last_hour": "3",
          "profit_last_hour": -8.649186893099946,
          "first_click_time": "2025-01-05 15:38:02",
          "clicks": "735756",
          "is_noted": false,
          "is_integrated": true,
          "is_domain_banned": false
        }
      ],
      "ai_instructions": [
        "Always use 'api-key' header for authentication, NOT Bearer token",
        "Include datePreset and timezone parameters for stats endpoints",
        "Info endpoints return basic entity information",
        "Use for getting IDs and names before detailed operations",
        "No custom metrics in info endpoints"
      ],
      "use_cases": [
        "Get available landing pages",
        "Find landing IDs for campaign optimization"
      ],
      "error_handling": {
        "common_errors": {
          "401": {
            "description": "Unauthorized - Wrong API key or header format",
            "solution": "Use 'api-key' header, not Bearer token"
          },
          "400": {
            "description": "Bad Request - Missing required parameters",
            "solution": "Include datePreset and timezone for stats endpoints"
          },
          "404": {
            "description": "Not Found - Invalid endpoint or resource ID",
            "solution": "Check endpoint path and resource existence"
          }
        }
      },
      "code_examples": {
        "python": "import requests\nimport os\n\napi_key = os.getenv('binomPublic')\nurl = \"https://pierdun.com/public/api/v1/info/landing\"\n\nheaders = {\n    \"api-key\": api_key,\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n}\n\nparams = {\n    \"datePreset\": \"last_7_days\",\n    \"timezone\": \"UTC\",\n    \"limit\": 5,\n    \"offset\": 0\n}\n\nresponse = requests.get(url, headers=headers, params=params)\n\nif response.status_code == 200:\n    data = response.json()\n    print(f\"Success: {len(data)} records\")\nelse:\n    print(f\"Error: {response.status_code} - {response.text}\")",
        "curl": "curl -X GET \"https://pierdun.com/public/api/v1/info/landing?datePreset=last_7_days&timezone=UTC&limit=5&offset=0\" \\\n  -H \"api-key: $binomPublic\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/json\"",
        "javascript": "const apiKey = process.env.binomPublic;\nconst url = 'https://pierdun.com/public/api/v1/info/landing';\n\nconst params = new URLSearchParams({\"datePreset\": \"last_7_days\", \"timezone\": \"UTC\", \"limit\": 5, \"offset\": 0});\n\nfetch(`${url}?${params}`, {\n  method: 'GET',\n  headers: {\n    'api-key': apiKey,\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n})\n.then(response => response.json())\n.then(data => console.log('Success:', data))\n.catch(error => console.error('Error:', error));"
      },
      "real_data_available": true,
      "last_tested": "2025-09-26T22:38:59.694801"
    },
    "/info/offer": {
      "path": "/info/offer",
      "method": "GET",
      "summary": "Get Offer information list",
      "description": "Returns basic information about offer. Array of 6 items (objects with 15 fields)",
      "category": "info",
      "tags": [
        "information",
        "offer"
      ],
      "parameters": [
        {
          "name": "datePreset",
          "type": "str",
          "required": true,
          "description": "Time period for data filtering. Required for stats endpoints.",
          "example": "last_7_days"
        },
        {
          "name": "timezone",
          "type": "str",
          "required": true,
          "description": "Timezone for date calculations. Required for stats endpoints.",
          "example": "UTC"
        },
        {
          "name": "limit",
          "type": "int",
          "required": false,
          "description": "Maximum number of records to return",
          "example": 5
        },
        {
          "name": "offset",
          "type": "int",
          "required": false,
          "description": "Number of records to skip for pagination",
          "example": 0
        }
      ],
      "request_schema": {
        "type": "object",
        "properties": {
          "datePreset": {
            "type": "string",
            "description": "Time period for data filtering. Required for stats endpoints.",
            "example": "last_7_days"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone for date calculations. Required for stats endpoints.",
            "example": "UTC"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of records to return",
            "example": 5
          },
          "offset": {
            "type": "integer",
            "description": "Number of records to skip for pagination",
            "example": 0
          }
        },
        "required": [
          "datePreset",
          "timezone"
        ]
      },
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "inHaus - IOS - AI Smart Block - (Branch)"
          },
          "is_deleted": {
            "type": "integer",
            "example": false
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "https://ovd0o.app.link/C102yLXNRPb?%243p=a_custom_1403847507905986865&~secondary_publisher={campaign}&~placement={t1}&~ad_id={clickid}"
          },
          "group_name": {
            "type": "unknown",
            "value": "None"
          },
          "affiliate_network": {
            "type": "unknown",
            "value": "None"
          },
          "mean_time_to_convert": {
            "type": "number",
            "example": 197903.51971608834
          },
          "seconds_since_last_lead": {
            "type": "string",
            "example": "1312320"
          },
          "clicks_last_hour": {
            "type": "string",
            "example": "1"
          },
          "leads_last_hour": {
            "type": "string",
            "example": "0"
          },
          "profit_last_hour": {
            "type": "number",
            "example": -0.00097344
          },
          "first_click_time": {
            "type": "string",
            "example": "2025-01-05 15:37:11"
          },
          "clicks": {
            "type": "string",
            "example": "3"
          },
          "is_noted": {
            "type": "integer",
            "example": false
          }
        }
      },
      "response_example": [
        {
          "id": 1,
          "name": "inHaus - IOS - AI Smart Block - (Branch)",
          "is_deleted": false,
          "country": "",
          "url": "https://ovd0o.app.link/C102yLXNRPb?%243p=a_custom_1403847507905986865&~secondary_publisher={campaign}&~placement={t1}&~ad_id={clickid}",
          "group_name": null,
          "affiliate_network": null,
          "mean_time_to_convert": 197903.51971608834,
          "seconds_since_last_lead": "1312320",
          "clicks_last_hour": "1",
          "leads_last_hour": "0",
          "profit_last_hour": -0.00097344,
          "first_click_time": "2025-01-05 15:37:11",
          "clicks": "3",
          "is_noted": false
        },
        {
          "id": 2,
          "name": "KUDI Revshare - Sentinel Adblock (Branch)",
          "is_deleted": false,
          "country": "",
          "url": "https://lb6nt.app.link/ypQ5c2fORPb?%243p=a_custom_1403848400748202298&~secondary_publisher={campaign}&~placement={t1}&~ad_id={clickid}",
          "group_name": null,
          "affiliate_network": null,
          "mean_time_to_convert": 147763.90032894738,
          "seconds_since_last_lead": "8851932",
          "clicks_last_hour": "5",
          "leads_last_hour": "0",
          "profit_last_hour": -0.01123741,
          "first_click_time": "2025-01-05 15:37:11",
          "clicks": "78",
          "is_noted": false
        }
      ],
      "ai_instructions": [
        "Always use 'api-key' header for authentication, NOT Bearer token",
        "Include datePreset and timezone parameters for stats endpoints",
        "Info endpoints return basic entity information",
        "Use for getting IDs and names before detailed operations",
        "No custom metrics in info endpoints"
      ],
      "use_cases": [],
      "error_handling": {
        "common_errors": {
          "401": {
            "description": "Unauthorized - Wrong API key or header format",
            "solution": "Use 'api-key' header, not Bearer token"
          },
          "400": {
            "description": "Bad Request - Missing required parameters",
            "solution": "Include datePreset and timezone for stats endpoints"
          },
          "404": {
            "description": "Not Found - Invalid endpoint or resource ID",
            "solution": "Check endpoint path and resource existence"
          }
        }
      },
      "code_examples": {
        "python": "import requests\nimport os\n\napi_key = os.getenv('binomPublic')\nurl = \"https://pierdun.com/public/api/v1/info/offer\"\n\nheaders = {\n    \"api-key\": api_key,\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n}\n\nparams = {\n    \"datePreset\": \"last_7_days\",\n    \"timezone\": \"UTC\",\n    \"limit\": 5,\n    \"offset\": 0\n}\n\nresponse = requests.get(url, headers=headers, params=params)\n\nif response.status_code == 200:\n    data = response.json()\n    print(f\"Success: {len(data)} records\")\nelse:\n    print(f\"Error: {response.status_code} - {response.text}\")",
        "curl": "curl -X GET \"https://pierdun.com/public/api/v1/info/offer?datePreset=last_7_days&timezone=UTC&limit=5&offset=0\" \\\n  -H \"api-key: $binomPublic\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/json\"",
        "javascript": "const apiKey = process.env.binomPublic;\nconst url = 'https://pierdun.com/public/api/v1/info/offer';\n\nconst params = new URLSearchParams({\"datePreset\": \"last_7_days\", \"timezone\": \"UTC\", \"limit\": 5, \"offset\": 0});\n\nfetch(`${url}?${params}`, {\n  method: 'GET',\n  headers: {\n    'api-key': apiKey,\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n})\n.then(response => response.json())\n.then(data => console.log('Success:', data))\n.catch(error => console.error('Error:', error));"
      },
      "real_data_available": true,
      "last_tested": "2025-09-26T22:38:59.694801"
    },
    "/info/rotation": {
      "path": "/info/rotation",
      "method": "GET",
      "summary": "Get Rotation information list",
      "description": "Returns basic information about rotation. Array of 1 items (objects with 2 fields)",
      "category": "info",
      "tags": [
        "information"
      ],
      "parameters": [
        {
          "name": "datePreset",
          "type": "str",
          "required": true,
          "description": "Time period for data filtering. Required for stats endpoints.",
          "example": "last_7_days"
        },
        {
          "name": "timezone",
          "type": "str",
          "required": true,
          "description": "Timezone for date calculations. Required for stats endpoints.",
          "example": "UTC"
        },
        {
          "name": "limit",
          "type": "int",
          "required": false,
          "description": "Maximum number of records to return",
          "example": 5
        },
        {
          "name": "offset",
          "type": "int",
          "required": false,
          "description": "Number of records to skip for pagination",
          "example": 0
        }
      ],
      "request_schema": {
        "type": "object",
        "properties": {
          "datePreset": {
            "type": "string",
            "description": "Time period for data filtering. Required for stats endpoints.",
            "example": "last_7_days"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone for date calculations. Required for stats endpoints.",
            "example": "UTC"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of records to return",
            "example": 5
          },
          "offset": {
            "type": "integer",
            "description": "Number of records to skip for pagination",
            "example": 0
          }
        },
        "required": [
          "datePreset",
          "timezone"
        ]
      },
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "totals"
          },
          "total_count": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "response_example": [
        {
          "id": "totals",
          "total_count": 0
        }
      ],
      "ai_instructions": [
        "Always use 'api-key' header for authentication, NOT Bearer token",
        "Include datePreset and timezone parameters for stats endpoints",
        "Info endpoints return basic entity information",
        "Use for getting IDs and names before detailed operations",
        "No custom metrics in info endpoints"
      ],
      "use_cases": [],
      "error_handling": {
        "common_errors": {
          "401": {
            "description": "Unauthorized - Wrong API key or header format",
            "solution": "Use 'api-key' header, not Bearer token"
          },
          "400": {
            "description": "Bad Request - Missing required parameters",
            "solution": "Include datePreset and timezone for stats endpoints"
          },
          "404": {
            "description": "Not Found - Invalid endpoint or resource ID",
            "solution": "Check endpoint path and resource existence"
          }
        }
      },
      "code_examples": {
        "python": "import requests\nimport os\n\napi_key = os.getenv('binomPublic')\nurl = \"https://pierdun.com/public/api/v1/info/rotation\"\n\nheaders = {\n    \"api-key\": api_key,\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n}\n\nparams = {\n    \"datePreset\": \"last_7_days\",\n    \"timezone\": \"UTC\",\n    \"limit\": 5,\n    \"offset\": 0\n}\n\nresponse = requests.get(url, headers=headers, params=params)\n\nif response.status_code == 200:\n    data = response.json()\n    print(f\"Success: {len(data)} records\")\nelse:\n    print(f\"Error: {response.status_code} - {response.text}\")",
        "curl": "curl -X GET \"https://pierdun.com/public/api/v1/info/rotation?datePreset=last_7_days&timezone=UTC&limit=5&offset=0\" \\\n  -H \"api-key: $binomPublic\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/json\"",
        "javascript": "const apiKey = process.env.binomPublic;\nconst url = 'https://pierdun.com/public/api/v1/info/rotation';\n\nconst params = new URLSearchParams({\"datePreset\": \"last_7_days\", \"timezone\": \"UTC\", \"limit\": 5, \"offset\": 0});\n\nfetch(`${url}?${params}`, {\n  method: 'GET',\n  headers: {\n    'api-key': apiKey,\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n})\n.then(response => response.json())\n.then(data => console.log('Success:', data))\n.catch(error => console.error('Error:', error));"
      },
      "real_data_available": true,
      "last_tested": "2025-09-26T22:38:59.694801"
    },
    "/info/traffic_source": {
      "path": "/info/traffic_source",
      "method": "GET",
      "summary": "Get Traffic Source information list",
      "description": "Returns basic information about traffic source. Array of 6 items (objects with 12 fields)",
      "category": "info",
      "tags": [
        "information",
        "traffic_source"
      ],
      "parameters": [
        {
          "name": "datePreset",
          "type": "str",
          "required": true,
          "description": "Time period for data filtering. Required for stats endpoints.",
          "example": "last_7_days"
        },
        {
          "name": "timezone",
          "type": "str",
          "required": true,
          "description": "Timezone for date calculations. Required for stats endpoints.",
          "example": "UTC"
        },
        {
          "name": "limit",
          "type": "int",
          "required": false,
          "description": "Maximum number of records to return",
          "example": 5
        },
        {
          "name": "offset",
          "type": "int",
          "required": false,
          "description": "Number of records to skip for pagination",
          "example": 0
        }
      ],
      "request_schema": {
        "type": "object",
        "properties": {
          "datePreset": {
            "type": "string",
            "description": "Time period for data filtering. Required for stats endpoints.",
            "example": "last_7_days"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone for date calculations. Required for stats endpoints.",
            "example": "UTC"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of records to return",
            "example": 5
          },
          "offset": {
            "type": "integer",
            "description": "Number of records to skip for pagination",
            "example": 0
          }
        },
        "required": [
          "datePreset",
          "timezone"
        ]
      },
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Advertizer(vika92kozlova@gmail.com) - Pavel"
          },
          "is_deleted": {
            "type": "integer",
            "example": false
          },
          "campaigns": {
            "type": "string",
            "example": "2"
          },
          "mean_time_to_convert": {
            "type": "number",
            "example": 197032.4514563107
          },
          "seconds_since_last_lead": {
            "type": "string",
            "example": "17068598"
          },
          "clicks_last_hour": {
            "type": "string",
            "example": "0"
          },
          "leads_last_hour": {
            "type": "string",
            "example": "0"
          },
          "profit_last_hour": {
            "type": "integer",
            "example": 0
          },
          "first_click_time": {
            "type": "string",
            "example": "2025-01-05 17:41:10"
          },
          "clicks": {
            "type": "string",
            "example": "5"
          },
          "is_noted": {
            "type": "integer",
            "example": false
          }
        }
      },
      "response_example": [
        {
          "id": 1,
          "name": "Advertizer(vika92kozlova@gmail.com) - Pavel",
          "is_deleted": false,
          "campaigns": "2",
          "mean_time_to_convert": 197032.4514563107,
          "seconds_since_last_lead": "17068598",
          "clicks_last_hour": "0",
          "leads_last_hour": "0",
          "profit_last_hour": 0,
          "first_click_time": "2025-01-05 17:41:10",
          "clicks": "5",
          "is_noted": false
        },
        {
          "id": 2,
          "name": "ExoClick(denisgrabko2@gmail.com) - SSP - Pavel - CPT",
          "is_deleted": false,
          "campaigns": "13",
          "mean_time_to_convert": 234709.55279951167,
          "seconds_since_last_lead": "539",
          "clicks_last_hour": "7016",
          "leads_last_hour": "4",
          "profit_last_hour": -33.877135112700465,
          "first_click_time": "2025-01-05 15:37:11",
          "clicks": "655939",
          "is_noted": false
        }
      ],
      "ai_instructions": [
        "Always use 'api-key' header for authentication, NOT Bearer token",
        "Include datePreset and timezone parameters for stats endpoints",
        "Info endpoints return basic entity information",
        "Use for getting IDs and names before detailed operations",
        "No custom metrics in info endpoints"
      ],
      "use_cases": [],
      "error_handling": {
        "common_errors": {
          "401": {
            "description": "Unauthorized - Wrong API key or header format",
            "solution": "Use 'api-key' header, not Bearer token"
          },
          "400": {
            "description": "Bad Request - Missing required parameters",
            "solution": "Include datePreset and timezone for stats endpoints"
          },
          "404": {
            "description": "Not Found - Invalid endpoint or resource ID",
            "solution": "Check endpoint path and resource existence"
          }
        }
      },
      "code_examples": {
        "python": "import requests\nimport os\n\napi_key = os.getenv('binomPublic')\nurl = \"https://pierdun.com/public/api/v1/info/traffic_source\"\n\nheaders = {\n    \"api-key\": api_key,\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n}\n\nparams = {\n    \"datePreset\": \"last_7_days\",\n    \"timezone\": \"UTC\",\n    \"limit\": 5,\n    \"offset\": 0\n}\n\nresponse = requests.get(url, headers=headers, params=params)\n\nif response.status_code == 200:\n    data = response.json()\n    print(f\"Success: {len(data)} records\")\nelse:\n    print(f\"Error: {response.status_code} - {response.text}\")",
        "curl": "curl -X GET \"https://pierdun.com/public/api/v1/info/traffic_source?datePreset=last_7_days&timezone=UTC&limit=5&offset=0\" \\\n  -H \"api-key: $binomPublic\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/json\"",
        "javascript": "const apiKey = process.env.binomPublic;\nconst url = 'https://pierdun.com/public/api/v1/info/traffic_source';\n\nconst params = new URLSearchParams({\"datePreset\": \"last_7_days\", \"timezone\": \"UTC\", \"limit\": 5, \"offset\": 0});\n\nfetch(`${url}?${params}`, {\n  method: 'GET',\n  headers: {\n    'api-key': apiKey,\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n})\n.then(response => response.json())\n.then(data => console.log('Success:', data))\n.catch(error => console.error('Error:', error));"
      },
      "real_data_available": true,
      "last_tested": "2025-09-26T22:38:59.694801"
    },
    "/stats/affiliate_network": {
      "path": "/stats/affiliate_network",
      "method": "GET",
      "summary": "Get Affiliate Network statistics with metrics",
      "description": "Returns statistical data and metrics for affiliate network. Includes custom metrics like eCPT, eCPB, trials, and buyouts. Array of 6 items (objects with 16 fields)",
      "category": "stats",
      "tags": [
        "statistics",
        "metrics",
        "analytics"
      ],
      "parameters": [
        {
          "name": "datePreset",
          "type": "str",
          "required": true,
          "description": "Time period for data filtering. Required for stats endpoints.",
          "example": "last_7_days"
        },
        {
          "name": "timezone",
          "type": "str",
          "required": true,
          "description": "Timezone for date calculations. Required for stats endpoints.",
          "example": "UTC"
        },
        {
          "name": "limit",
          "type": "int",
          "required": false,
          "description": "Maximum number of records to return",
          "example": 5
        },
        {
          "name": "offset",
          "type": "int",
          "required": false,
          "description": "Number of records to skip for pagination",
          "example": 0
        },
        {
          "name": "groupBy",
          "type": "str",
          "required": false,
          "description": "Field to group results by",
          "example": "id"
        },
        {
          "name": "sortColumn",
          "type": "str",
          "required": false,
          "description": "Column to sort results by",
          "example": "clicks"
        },
        {
          "name": "sortType",
          "type": "str",
          "required": false,
          "description": "Sort direction (asc/desc)",
          "example": "desc"
        }
      ],
      "request_schema": {
        "type": "object",
        "properties": {
          "datePreset": {
            "type": "string",
            "description": "Time period for data filtering. Required for stats endpoints.",
            "example": "last_7_days"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone for date calculations. Required for stats endpoints.",
            "example": "UTC"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of records to return",
            "example": 5
          },
          "offset": {
            "type": "integer",
            "description": "Number of records to skip for pagination",
            "example": 0
          },
          "groupBy": {
            "type": "string",
            "description": "Field to group results by",
            "example": "id"
          },
          "sortColumn": {
            "type": "string",
            "description": "Column to sort results by",
            "example": "clicks"
          },
          "sortType": {
            "type": "string",
            "description": "Sort direction (asc/desc)",
            "example": "desc"
          }
        },
        "required": [
          "datePreset",
          "timezone"
        ]
      },
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "15"
          },
          "name": {
            "type": "string",
            "example": "Updated Test Network"
          },
          "offers": {
            "type": "string",
            "example": "0"
          },
          "clicks": {
            "type": "string",
            "example": "0"
          },
          "leads": {
            "type": "string",
            "example": "0"
          },
          "cr": {
            "type": "string",
            "example": "0"
          },
          "bots": {
            "type": "string",
            "example": "0"
          },
          "epc": {
            "type": "string",
            "example": "0"
          },
          "cpc": {
            "type": "string",
            "example": "0"
          },
          "revenue": {
            "type": "string",
            "example": "0"
          },
          "cost": {
            "type": "string",
            "example": "0"
          },
          "profit": {
            "type": "string",
            "example": "0"
          },
          "roi": {
            "type": "string",
            "example": "0"
          },
          "unique_clicks": {
            "type": "string",
            "example": "0"
          },
          "is_deleted": {
            "type": "string",
            "example": ""
          },
          "is_noted": {
            "type": "integer",
            "example": false
          }
        }
      },
      "response_example": [
        {
          "id": "15",
          "name": "Updated Test Network",
          "offers": "0",
          "clicks": "0",
          "leads": "0",
          "cr": "0",
          "bots": "0",
          "epc": "0",
          "cpc": "0",
          "revenue": "0",
          "cost": "0",
          "profit": "0",
          "roi": "0",
          "unique_clicks": "0",
          "is_deleted": "",
          "is_noted": false
        },
        {
          "id": "14",
          "name": "Network for Restore Test",
          "offers": "0",
          "clicks": "0",
          "leads": "0",
          "cr": "0",
          "bots": "0",
          "epc": "0",
          "cpc": "0",
          "revenue": "0",
          "cost": "0",
          "profit": "0",
          "roi": "0",
          "unique_clicks": "0",
          "is_deleted": "",
          "is_noted": false
        }
      ],
      "ai_instructions": [
        "Always use 'api-key' header for authentication, NOT Bearer token",
        "Include datePreset and timezone parameters for stats endpoints",
        "Stats endpoints return custom metrics with UUID keys",
        "Look for eCPT, eCPB, trials, buyouts in response",
        "Use groupBy parameter to aggregate data",
        "Sort by clicks or cost for meaningful results"
      ],
      "use_cases": [],
      "error_handling": {
        "common_errors": {
          "401": {
            "description": "Unauthorized - Wrong API key or header format",
            "solution": "Use 'api-key' header, not Bearer token"
          },
          "400": {
            "description": "Bad Request - Missing required parameters",
            "solution": "Include datePreset and timezone for stats endpoints"
          },
          "404": {
            "description": "Not Found - Invalid endpoint or resource ID",
            "solution": "Check endpoint path and resource existence"
          }
        }
      },
      "code_examples": {
        "python": "import requests\nimport os\n\napi_key = os.getenv('binomPublic')\nurl = \"https://pierdun.com/public/api/v1/stats/affiliate_network\"\n\nheaders = {\n    \"api-key\": api_key,\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n}\n\nparams = {\n    \"datePreset\": \"last_7_days\",\n    \"timezone\": \"UTC\",\n    \"limit\": 5,\n    \"offset\": 0,\n    \"groupBy\": \"id\",\n    \"sortColumn\": \"clicks\",\n    \"sortType\": \"desc\"\n}\n\nresponse = requests.get(url, headers=headers, params=params)\n\nif response.status_code == 200:\n    data = response.json()\n    print(f\"Success: {len(data)} records\")\nelse:\n    print(f\"Error: {response.status_code} - {response.text}\")",
        "curl": "curl -X GET \"https://pierdun.com/public/api/v1/stats/affiliate_network?datePreset=last_7_days&timezone=UTC&limit=5&offset=0&groupBy=id&sortColumn=clicks&sortType=desc\" \\\n  -H \"api-key: $binomPublic\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/json\"",
        "javascript": "const apiKey = process.env.binomPublic;\nconst url = 'https://pierdun.com/public/api/v1/stats/affiliate_network';\n\nconst params = new URLSearchParams({\"datePreset\": \"last_7_days\", \"timezone\": \"UTC\", \"limit\": 5, \"offset\": 0, \"groupBy\": \"id\", \"sortColumn\": \"clicks\", \"sortType\": \"desc\"});\n\nfetch(`${url}?${params}`, {\n  method: 'GET',\n  headers: {\n    'api-key': apiKey,\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n})\n.then(response => response.json())\n.then(data => console.log('Success:', data))\n.catch(error => console.error('Error:', error));"
      },
      "real_data_available": true,
      "last_tested": "2025-09-26T22:38:59.694801"
    },
    "/stats/campaign": {
      "path": "/stats/campaign",
      "method": "GET",
      "summary": "Get Campaign statistics with metrics",
      "description": "Returns statistical data and metrics for campaign. Includes custom metrics like eCPT, eCPB, trials, and buyouts. Array of 6 items (objects with 33 fields)",
      "category": "stats",
      "tags": [
        "statistics",
        "metrics",
        "analytics",
        "campaign"
      ],
      "parameters": [
        {
          "name": "datePreset",
          "type": "str",
          "required": true,
          "description": "Time period for data filtering. Required for stats endpoints.",
          "example": "last_7_days"
        },
        {
          "name": "timezone",
          "type": "str",
          "required": true,
          "description": "Timezone for date calculations. Required for stats endpoints.",
          "example": "UTC"
        },
        {
          "name": "limit",
          "type": "int",
          "required": false,
          "description": "Maximum number of records to return",
          "example": 5
        },
        {
          "name": "offset",
          "type": "int",
          "required": false,
          "description": "Number of records to skip for pagination",
          "example": 0
        },
        {
          "name": "groupBy",
          "type": "str",
          "required": false,
          "description": "Field to group results by",
          "example": "id"
        },
        {
          "name": "sortColumn",
          "type": "str",
          "required": false,
          "description": "Column to sort results by",
          "example": "clicks"
        },
        {
          "name": "sortType",
          "type": "str",
          "required": false,
          "description": "Sort direction (asc/desc)",
          "example": "desc"
        }
      ],
      "request_schema": {
        "type": "object",
        "properties": {
          "datePreset": {
            "type": "string",
            "description": "Time period for data filtering. Required for stats endpoints.",
            "example": "last_7_days"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone for date calculations. Required for stats endpoints.",
            "example": "UTC"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of records to return",
            "example": 5
          },
          "offset": {
            "type": "integer",
            "description": "Number of records to skip for pagination",
            "example": 0
          },
          "groupBy": {
            "type": "string",
            "description": "Field to group results by",
            "example": "id"
          },
          "sortColumn": {
            "type": "string",
            "description": "Column to sort results by",
            "example": "clicks"
          },
          "sortType": {
            "type": "string",
            "description": "Sort direction (asc/desc)",
            "example": "desc"
          }
        },
        "required": [
          "datePreset",
          "timezone"
        ]
      },
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "167"
          },
          "eCPB::013d4336-8f03-42a4-a36d-ff6c0d8f2efd": {
            "type": "string",
            "example": "59.575007119138"
          },
          "TrialCancel::1fc9e6ad-6e6b-45de-9050-86a12aa9fcbb": {
            "type": "string",
            "example": "53"
          },
          "Buyouts::441d199a-9902-410e-9033-656ca6e67e1e": {
            "type": "string",
            "example": "13"
          },
          "Trials::4adcb8e3-e719-425e-9882-771a4bf4d143": {
            "type": "string",
            "example": "87"
          },
          "Active Trials::579e88c5-7fcd-4af5-87d9-0e799dd80065": {
            "type": "string",
            "example": "21"
          },
          "Trial %::9ff82bf7-7ded-4d28-a223-7a33b5a2e234": {
            "type": "string",
            "example": "14.356435643564"
          },
          "SubCancel::a9a13783-a0da-4d99-a6db-fd6087977c3f": {
            "type": "string",
            "example": "0"
          },
          "Trialcancel %::b5b34653-8bfa-44af-afbc-a118b89be692": {
            "type": "string",
            "example": "60.919540229885"
          },
          "eCPA::c04d981c-f898-4385-bfc4-7c3d0fca220c": {
            "type": "string",
            "example": "1.2780117038759"
          },
          "eCPT::c560568d-f58b-4d05-b5d8-9c2f28bd620d": {
            "type": "string",
            "example": "8.9020125580321"
          },
          "Buyouts %::c7cbf9d0-a3fc-4315-be91-578bb1c8cd8c": {
            "type": "string",
            "example": "14.942528735632"
          },
          "Active Sub::ce3527a0-2a79-482c-9800-0fdb35787799": {
            "type": "string",
            "example": "13"
          },
          "name": {
            "type": "string",
            "example": "JOJ5 / PROPSSP / PT - WEB / BR:WORK:cost:weight:opt:bider"
          },
          "group_name": {
            "type": "string",
            "example": ""
          },
          "traffic_source": {
            "type": "string",
            "example": "PropellerAds(mr.aleksvagano - KUDI) - Pavels"
          },
          "clicks": {
            "type": "string",
            "example": "787665"
          },
          "lander_views": {
            "type": "string",
            "example": "688320"
          },
          "lander_clicks": {
            "type": "string",
            "example": "27154"
          },
          "lander_ctr": {
            "type": "string",
            "example": "3.944967"
          },
          "leads": {
            "type": "string",
            "example": "606"
          },
          "cr": {
            "type": "string",
            "example": "0.076936"
          },
          "bots": {
            "type": "string",
            "example": "0"
          },
          "epc": {
            "type": "string",
            "example": "0.000884"
          },
          "cpc": {
            "type": "string",
            "example": "0.000983"
          },
          "revenue": {
            "type": "string",
            "example": "696"
          },
          "cost": {
            "type": "string",
            "example": "774.47509254879"
          },
          "profit": {
            "type": "string",
            "example": "-78.475092548791"
          },
          "roi": {
            "type": "string",
            "example": "-10.132681"
          },
          "unique_clicks": {
            "type": "string",
            "example": "468057"
          },
          "is_deleted": {
            "type": "string",
            "example": ""
          },
          "is_noted": {
            "type": "integer",
            "example": true
          },
          "is_domain_banned": {
            "type": "integer",
            "example": false
          }
        }
      },
      "response_example": [
        {
          "id": "167",
          "eCPB::013d4336-8f03-42a4-a36d-ff6c0d8f2efd": "59.575007119138",
          "TrialCancel::1fc9e6ad-6e6b-45de-9050-86a12aa9fcbb": "53",
          "Buyouts::441d199a-9902-410e-9033-656ca6e67e1e": "13",
          "Trials::4adcb8e3-e719-425e-9882-771a4bf4d143": "87",
          "Active Trials::579e88c5-7fcd-4af5-87d9-0e799dd80065": "21",
          "Trial %::9ff82bf7-7ded-4d28-a223-7a33b5a2e234": "14.356435643564",
          "SubCancel::a9a13783-a0da-4d99-a6db-fd6087977c3f": "0",
          "Trialcancel %::b5b34653-8bfa-44af-afbc-a118b89be692": "60.919540229885",
          "eCPA::c04d981c-f898-4385-bfc4-7c3d0fca220c": "1.2780117038759",
          "eCPT::c560568d-f58b-4d05-b5d8-9c2f28bd620d": "8.9020125580321",
          "Buyouts %::c7cbf9d0-a3fc-4315-be91-578bb1c8cd8c": "14.942528735632",
          "Active Sub::ce3527a0-2a79-482c-9800-0fdb35787799": "13",
          "name": "JOJ5 / PROPSSP / PT - WEB / BR:WORK:cost:weight:opt:bider",
          "group_name": "",
          "traffic_source": "PropellerAds(mr.aleksvagano - KUDI) - Pavels",
          "clicks": "787665",
          "lander_views": "688320",
          "lander_clicks": "27154",
          "lander_ctr": "3.944967",
          "leads": "606",
          "cr": "0.076936",
          "bots": "0",
          "epc": "0.000884",
          "cpc": "0.000983",
          "revenue": "696",
          "cost": "774.47509254879",
          "profit": "-78.475092548791",
          "roi": "-10.132681",
          "unique_clicks": "468057",
          "is_deleted": "",
          "is_noted": true,
          "is_domain_banned": false
        },
        {
          "id": "152",
          "eCPB::013d4336-8f03-42a4-a36d-ff6c0d8f2efd": "99.543829043687",
          "TrialCancel::1fc9e6ad-6e6b-45de-9050-86a12aa9fcbb": "25",
          "Buyouts::441d199a-9902-410e-9033-656ca6e67e1e": "9",
          "Trials::4adcb8e3-e719-425e-9882-771a4bf4d143": "49",
          "Active Trials::579e88c5-7fcd-4af5-87d9-0e799dd80065": "15",
          "Trial %::9ff82bf7-7ded-4d28-a223-7a33b5a2e234": "41.880341880342",
          "SubCancel::a9a13783-a0da-4d99-a6db-fd6087977c3f": "1",
          "Trialcancel %::b5b34653-8bfa-44af-afbc-a118b89be692": "51.020408163265",
          "eCPA::c04d981c-f898-4385-bfc4-7c3d0fca220c": "7.6572176187451",
          "eCPT::c560568d-f58b-4d05-b5d8-9c2f28bd620d": "18.283560436595",
          "Buyouts %::c7cbf9d0-a3fc-4315-be91-578bb1c8cd8c": "18.367346938776",
          "Active Sub::ce3527a0-2a79-482c-9800-0fdb35787799": "8",
          "name": "JOJ5 / PROPSSP / ENG - WEB / US:WORK:cost:weight:opt:bider",
          "group_name": "",
          "traffic_source": "PropellerAds(mr.aleksvagano - KUDI) - Pavels",
          "clicks": "513190",
          "lander_views": "501152",
          "lander_clicks": "9956",
          "lander_ctr": "1.986623",
          "leads": "117",
          "cr": "0.022799",
          "bots": "0",
          "epc": "0.000218",
          "cpc": "0.001746",
          "revenue": "112",
          "cost": "895.89446139318",
          "profit": "-783.89446139318",
          "roi": "-87.498527",
          "unique_clicks": "329527",
          "is_deleted": "",
          "is_noted": false,
          "is_domain_banned": false
        }
      ],
      "ai_instructions": [
        "Always use 'api-key' header for authentication, NOT Bearer token",
        "Include datePreset and timezone parameters for stats endpoints",
        "Stats endpoints return custom metrics with UUID keys",
        "Look for eCPT, eCPB, trials, buyouts in response",
        "Use groupBy parameter to aggregate data",
        "Sort by clicks or cost for meaningful results"
      ],
      "use_cases": [
        "Analyze campaign performance with custom metrics",
        "Compare eCPT and eCPB across campaigns",
        "Identify top performing campaigns by ROI"
      ],
      "error_handling": {
        "common_errors": {
          "401": {
            "description": "Unauthorized - Wrong API key or header format",
            "solution": "Use 'api-key' header, not Bearer token"
          },
          "400": {
            "description": "Bad Request - Missing required parameters",
            "solution": "Include datePreset and timezone for stats endpoints"
          },
          "404": {
            "description": "Not Found - Invalid endpoint or resource ID",
            "solution": "Check endpoint path and resource existence"
          }
        }
      },
      "code_examples": {
        "python": "import requests\nimport os\n\napi_key = os.getenv('binomPublic')\nurl = \"https://pierdun.com/public/api/v1/stats/campaign\"\n\nheaders = {\n    \"api-key\": api_key,\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n}\n\nparams = {\n    \"datePreset\": \"last_7_days\",\n    \"timezone\": \"UTC\",\n    \"limit\": 5,\n    \"offset\": 0,\n    \"groupBy\": \"id\",\n    \"sortColumn\": \"clicks\",\n    \"sortType\": \"desc\"\n}\n\nresponse = requests.get(url, headers=headers, params=params)\n\nif response.status_code == 200:\n    data = response.json()\n    print(f\"Success: {len(data)} records\")\nelse:\n    print(f\"Error: {response.status_code} - {response.text}\")",
        "curl": "curl -X GET \"https://pierdun.com/public/api/v1/stats/campaign?datePreset=last_7_days&timezone=UTC&limit=5&offset=0&groupBy=id&sortColumn=clicks&sortType=desc\" \\\n  -H \"api-key: $binomPublic\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/json\"",
        "javascript": "const apiKey = process.env.binomPublic;\nconst url = 'https://pierdun.com/public/api/v1/stats/campaign';\n\nconst params = new URLSearchParams({\"datePreset\": \"last_7_days\", \"timezone\": \"UTC\", \"limit\": 5, \"offset\": 0, \"groupBy\": \"id\", \"sortColumn\": \"clicks\", \"sortType\": \"desc\"});\n\nfetch(`${url}?${params}`, {\n  method: 'GET',\n  headers: {\n    'api-key': apiKey,\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n})\n.then(response => response.json())\n.then(data => console.log('Success:', data))\n.catch(error => console.error('Error:', error));"
      },
      "real_data_available": true,
      "last_tested": "2025-09-26T22:38:59.694801"
    },
    "/stats/landing": {
      "path": "/stats/landing",
      "method": "GET",
      "summary": "Get Landing statistics with metrics",
      "description": "Returns statistical data and metrics for landing. Includes custom metrics like eCPT, eCPB, trials, and buyouts. Array of 6 items (objects with 23 fields)",
      "category": "stats",
      "tags": [
        "statistics",
        "metrics",
        "analytics",
        "landing"
      ],
      "parameters": [
        {
          "name": "datePreset",
          "type": "str",
          "required": true,
          "description": "Time period for data filtering. Required for stats endpoints.",
          "example": "last_7_days"
        },
        {
          "name": "timezone",
          "type": "str",
          "required": true,
          "description": "Timezone for date calculations. Required for stats endpoints.",
          "example": "UTC"
        },
        {
          "name": "limit",
          "type": "int",
          "required": false,
          "description": "Maximum number of records to return",
          "example": 5
        },
        {
          "name": "offset",
          "type": "int",
          "required": false,
          "description": "Number of records to skip for pagination",
          "example": 0
        },
        {
          "name": "groupBy",
          "type": "str",
          "required": false,
          "description": "Field to group results by",
          "example": "id"
        },
        {
          "name": "sortColumn",
          "type": "str",
          "required": false,
          "description": "Column to sort results by",
          "example": "clicks"
        },
        {
          "name": "sortType",
          "type": "str",
          "required": false,
          "description": "Sort direction (asc/desc)",
          "example": "desc"
        }
      ],
      "request_schema": {
        "type": "object",
        "properties": {
          "datePreset": {
            "type": "string",
            "description": "Time period for data filtering. Required for stats endpoints.",
            "example": "last_7_days"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone for date calculations. Required for stats endpoints.",
            "example": "UTC"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of records to return",
            "example": 5
          },
          "offset": {
            "type": "integer",
            "description": "Number of records to skip for pagination",
            "example": 0
          },
          "groupBy": {
            "type": "string",
            "description": "Field to group results by",
            "example": "id"
          },
          "sortColumn": {
            "type": "string",
            "description": "Column to sort results by",
            "example": "clicks"
          },
          "sortType": {
            "type": "string",
            "description": "Sort direction (asc/desc)",
            "example": "desc"
          }
        },
        "required": [
          "datePreset",
          "timezone"
        ]
      },
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "17"
          },
          "language": {
            "type": "string",
            "example": ""
          },
          "name": {
            "type": "string",
            "example": "Gogl style with timer - NO TOKEN"
          },
          "group_name": {
            "type": "string",
            "example": ""
          },
          "clicks": {
            "type": "string",
            "example": "749507"
          },
          "lander_ctr": {
            "type": "string",
            "example": "1.239081"
          },
          "leads": {
            "type": "string",
            "example": "938"
          },
          "cr": {
            "type": "string",
            "example": "0.125149"
          },
          "bots": {
            "type": "string",
            "example": "0"
          },
          "epc": {
            "type": "string",
            "example": "0.001452"
          },
          "cpc": {
            "type": "string",
            "example": "0.002679"
          },
          "revenue": {
            "type": "string",
            "example": "1088"
          },
          "cost": {
            "type": "string",
            "example": "2007.6334631197"
          },
          "profit": {
            "type": "string",
            "example": "-919.63346311967"
          },
          "roi": {
            "type": "string",
            "example": "-45.806841"
          },
          "unique_clicks": {
            "type": "string",
            "example": "466127"
          },
          "lander_clicks": {
            "type": "string",
            "example": "9287"
          },
          "lander_views": {
            "type": "string",
            "example": "749507"
          },
          "is_deleted": {
            "type": "string",
            "example": ""
          },
          "is_noted": {
            "type": "integer",
            "example": false
          },
          "is_integrated": {
            "type": "integer",
            "example": true
          },
          "url": {
            "type": "string",
            "example": "landers/farmaldgnrodois442eamdmnfnss/google-viruse-white-gh-pages/index.html"
          },
          "is_domain_banned": {
            "type": "integer",
            "example": false
          }
        }
      },
      "response_example": [
        {
          "id": "17",
          "language": "",
          "name": "Gogl style with timer - NO TOKEN",
          "group_name": "",
          "clicks": "749507",
          "lander_ctr": "1.239081",
          "leads": "938",
          "cr": "0.125149",
          "bots": "0",
          "epc": "0.001452",
          "cpc": "0.002679",
          "revenue": "1088",
          "cost": "2007.6334631197",
          "profit": "-919.63346311967",
          "roi": "-45.806841",
          "unique_clicks": "466127",
          "lander_clicks": "9287",
          "lander_views": "749507",
          "is_deleted": "",
          "is_noted": false,
          "is_integrated": true,
          "url": "landers/farmaldgnrodois442eamdmnfnss/google-viruse-white-gh-pages/index.html",
          "is_domain_banned": false
        },
        {
          "id": "2",
          "language": "",
          "name": "29 vir - Main - NO TOKENS",
          "group_name": "",
          "clicks": "735756",
          "lander_ctr": "4.777671",
          "leads": "744",
          "cr": "0.10112",
          "bots": "0",
          "epc": "0.001196",
          "cpc": "0.002757",
          "revenue": "880",
          "cost": "2028.6482746669",
          "profit": "-1148.6482746669",
          "roi": "-56.621362",
          "unique_clicks": "425715",
          "lander_clicks": "35152",
          "lander_views": "735756",
          "is_deleted": "",
          "is_noted": false,
          "is_integrated": true,
          "url": "landers/sasa_(2)/index.html",
          "is_domain_banned": false
        }
      ],
      "ai_instructions": [
        "Always use 'api-key' header for authentication, NOT Bearer token",
        "Include datePreset and timezone parameters for stats endpoints",
        "Stats endpoints return custom metrics with UUID keys",
        "Look for eCPT, eCPB, trials, buyouts in response",
        "Use groupBy parameter to aggregate data",
        "Sort by clicks or cost for meaningful results"
      ],
      "use_cases": [
        "Compare landing page performance",
        "Optimize landing page weights in campaigns"
      ],
      "error_handling": {
        "common_errors": {
          "401": {
            "description": "Unauthorized - Wrong API key or header format",
            "solution": "Use 'api-key' header, not Bearer token"
          },
          "400": {
            "description": "Bad Request - Missing required parameters",
            "solution": "Include datePreset and timezone for stats endpoints"
          },
          "404": {
            "description": "Not Found - Invalid endpoint or resource ID",
            "solution": "Check endpoint path and resource existence"
          }
        }
      },
      "code_examples": {
        "python": "import requests\nimport os\n\napi_key = os.getenv('binomPublic')\nurl = \"https://pierdun.com/public/api/v1/stats/landing\"\n\nheaders = {\n    \"api-key\": api_key,\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n}\n\nparams = {\n    \"datePreset\": \"last_7_days\",\n    \"timezone\": \"UTC\",\n    \"limit\": 5,\n    \"offset\": 0,\n    \"groupBy\": \"id\",\n    \"sortColumn\": \"clicks\",\n    \"sortType\": \"desc\"\n}\n\nresponse = requests.get(url, headers=headers, params=params)\n\nif response.status_code == 200:\n    data = response.json()\n    print(f\"Success: {len(data)} records\")\nelse:\n    print(f\"Error: {response.status_code} - {response.text}\")",
        "curl": "curl -X GET \"https://pierdun.com/public/api/v1/stats/landing?datePreset=last_7_days&timezone=UTC&limit=5&offset=0&groupBy=id&sortColumn=clicks&sortType=desc\" \\\n  -H \"api-key: $binomPublic\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/json\"",
        "javascript": "const apiKey = process.env.binomPublic;\nconst url = 'https://pierdun.com/public/api/v1/stats/landing';\n\nconst params = new URLSearchParams({\"datePreset\": \"last_7_days\", \"timezone\": \"UTC\", \"limit\": 5, \"offset\": 0, \"groupBy\": \"id\", \"sortColumn\": \"clicks\", \"sortType\": \"desc\"});\n\nfetch(`${url}?${params}`, {\n  method: 'GET',\n  headers: {\n    'api-key': apiKey,\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n})\n.then(response => response.json())\n.then(data => console.log('Success:', data))\n.catch(error => console.error('Error:', error));"
      },
      "real_data_available": true,
      "last_tested": "2025-09-26T22:38:59.694801"
    },
    "/stats/offer": {
      "path": "/stats/offer",
      "method": "GET",
      "summary": "Get Offer statistics with metrics",
      "description": "Returns statistical data and metrics for offer. Includes custom metrics like eCPT, eCPB, trials, and buyouts. Array of 6 items (objects with 23 fields)",
      "category": "stats",
      "tags": [
        "statistics",
        "metrics",
        "analytics",
        "offer"
      ],
      "parameters": [
        {
          "name": "datePreset",
          "type": "str",
          "required": true,
          "description": "Time period for data filtering. Required for stats endpoints.",
          "example": "last_7_days"
        },
        {
          "name": "timezone",
          "type": "str",
          "required": true,
          "description": "Timezone for date calculations. Required for stats endpoints.",
          "example": "UTC"
        },
        {
          "name": "limit",
          "type": "int",
          "required": false,
          "description": "Maximum number of records to return",
          "example": 5
        },
        {
          "name": "offset",
          "type": "int",
          "required": false,
          "description": "Number of records to skip for pagination",
          "example": 0
        },
        {
          "name": "groupBy",
          "type": "str",
          "required": false,
          "description": "Field to group results by",
          "example": "id"
        },
        {
          "name": "sortColumn",
          "type": "str",
          "required": false,
          "description": "Column to sort results by",
          "example": "clicks"
        },
        {
          "name": "sortType",
          "type": "str",
          "required": false,
          "description": "Sort direction (asc/desc)",
          "example": "desc"
        }
      ],
      "request_schema": {
        "type": "object",
        "properties": {
          "datePreset": {
            "type": "string",
            "description": "Time period for data filtering. Required for stats endpoints.",
            "example": "last_7_days"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone for date calculations. Required for stats endpoints.",
            "example": "UTC"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of records to return",
            "example": 5
          },
          "offset": {
            "type": "integer",
            "description": "Number of records to skip for pagination",
            "example": 0
          },
          "groupBy": {
            "type": "string",
            "description": "Field to group results by",
            "example": "id"
          },
          "sortColumn": {
            "type": "string",
            "description": "Column to sort results by",
            "example": "clicks"
          },
          "sortType": {
            "type": "string",
            "description": "Sort direction (asc/desc)",
            "example": "desc"
          }
        },
        "required": [
          "datePreset",
          "timezone"
        ]
      },
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "35"
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "name": {
            "type": "string",
            "example": "APPSTERO CPT - Pavel - Dynamic CPT offers - Multigeo - #1"
          },
          "group_name": {
            "type": "string",
            "example": ""
          },
          "affiliate_network": {
            "type": "string",
            "example": ""
          },
          "clicks": {
            "type": "string",
            "example": "851901"
          },
          "lander_ctr": {
            "type": "string",
            "example": "4.901274"
          },
          "leads": {
            "type": "string",
            "example": "1259"
          },
          "cr": {
            "type": "string",
            "example": "0.147787"
          },
          "bots": {
            "type": "string",
            "example": "0"
          },
          "epc": {
            "type": "string",
            "example": "0.002235"
          },
          "cpc": {
            "type": "string",
            "example": "0.002342"
          },
          "revenue": {
            "type": "string",
            "example": "1904"
          },
          "cost": {
            "type": "string",
            "example": "1995.1468548785"
          },
          "profit": {
            "type": "string",
            "example": "-91.146854878457"
          },
          "roi": {
            "type": "string",
            "example": "-4.568428"
          },
          "payout": {
            "type": "object",
            "properties": {
              "money": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "example": 0
                  },
                  "currency": {
                    "type": "string",
                    "example": "USD"
                  }
                }
              },
              "isAuto": {
                "type": "integer",
                "example": true
              },
              "isUpsell": {
                "type": "integer",
                "example": true
              }
            }
          },
          "unique_clicks": {
            "type": "string",
            "example": "481858"
          },
          "lander_clicks": {
            "type": "string",
            "example": "41754"
          },
          "lander_views": {
            "type": "string",
            "example": "851901"
          },
          "is_deleted": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "https://track.spottly-cleaner-app.com/click?pid=122&offer_id=749&sub1={clickid}"
          },
          "is_noted": {
            "type": "integer",
            "example": false
          }
        }
      },
      "response_example": [
        {
          "id": "35",
          "country": "",
          "name": "APPSTERO CPT - Pavel - Dynamic CPT offers - Multigeo - #1",
          "group_name": "",
          "affiliate_network": "",
          "clicks": "851901",
          "lander_ctr": "4.901274",
          "leads": "1259",
          "cr": "0.147787",
          "bots": "0",
          "epc": "0.002235",
          "cpc": "0.002342",
          "revenue": "1904",
          "cost": "1995.1468548785",
          "profit": "-91.146854878457",
          "roi": "-4.568428",
          "payout": {
            "money": {
              "amount": 0,
              "currency": "USD"
            },
            "isAuto": true,
            "isUpsell": true
          },
          "unique_clicks": "481858",
          "lander_clicks": "41754",
          "lander_views": "851901",
          "is_deleted": "",
          "url": "https://track.spottly-cleaner-app.com/click?pid=122&offer_id=749&sub1={clickid}",
          "is_noted": false
        },
        {
          "id": "36",
          "country": "",
          "name": "APPSTERO CPT - Pavel - Dynamic CPT offers - Multigeo - #2",
          "group_name": "",
          "affiliate_network": "",
          "clicks": "717765",
          "lander_ctr": "4.860783",
          "leads": "1078",
          "cr": "0.150188",
          "bots": "0",
          "epc": "0.00214",
          "cpc": "0.002306",
          "revenue": "1536",
          "cost": "1655.3702794203",
          "profit": "-119.37027942032",
          "roi": "-7.211092",
          "payout": {
            "money": {
              "amount": 0,
              "currency": "USD"
            },
            "isAuto": true,
            "isUpsell": true
          },
          "unique_clicks": "411560",
          "lander_clicks": "34889",
          "lander_views": "717765",
          "is_deleted": "",
          "url": "https://track.spottly-cleaner-app.com/click?pid=122&offer_id=750&sub1={clickid}",
          "is_noted": false
        }
      ],
      "ai_instructions": [
        "Always use 'api-key' header for authentication, NOT Bearer token",
        "Include datePreset and timezone parameters for stats endpoints",
        "Stats endpoints return custom metrics with UUID keys",
        "Look for eCPT, eCPB, trials, buyouts in response",
        "Use groupBy parameter to aggregate data",
        "Sort by clicks or cost for meaningful results"
      ],
      "use_cases": [],
      "error_handling": {
        "common_errors": {
          "401": {
            "description": "Unauthorized - Wrong API key or header format",
            "solution": "Use 'api-key' header, not Bearer token"
          },
          "400": {
            "description": "Bad Request - Missing required parameters",
            "solution": "Include datePreset and timezone for stats endpoints"
          },
          "404": {
            "description": "Not Found - Invalid endpoint or resource ID",
            "solution": "Check endpoint path and resource existence"
          }
        }
      },
      "code_examples": {
        "python": "import requests\nimport os\n\napi_key = os.getenv('binomPublic')\nurl = \"https://pierdun.com/public/api/v1/stats/offer\"\n\nheaders = {\n    \"api-key\": api_key,\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n}\n\nparams = {\n    \"datePreset\": \"last_7_days\",\n    \"timezone\": \"UTC\",\n    \"limit\": 5,\n    \"offset\": 0,\n    \"groupBy\": \"id\",\n    \"sortColumn\": \"clicks\",\n    \"sortType\": \"desc\"\n}\n\nresponse = requests.get(url, headers=headers, params=params)\n\nif response.status_code == 200:\n    data = response.json()\n    print(f\"Success: {len(data)} records\")\nelse:\n    print(f\"Error: {response.status_code} - {response.text}\")",
        "curl": "curl -X GET \"https://pierdun.com/public/api/v1/stats/offer?datePreset=last_7_days&timezone=UTC&limit=5&offset=0&groupBy=id&sortColumn=clicks&sortType=desc\" \\\n  -H \"api-key: $binomPublic\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/json\"",
        "javascript": "const apiKey = process.env.binomPublic;\nconst url = 'https://pierdun.com/public/api/v1/stats/offer';\n\nconst params = new URLSearchParams({\"datePreset\": \"last_7_days\", \"timezone\": \"UTC\", \"limit\": 5, \"offset\": 0, \"groupBy\": \"id\", \"sortColumn\": \"clicks\", \"sortType\": \"desc\"});\n\nfetch(`${url}?${params}`, {\n  method: 'GET',\n  headers: {\n    'api-key': apiKey,\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n})\n.then(response => response.json())\n.then(data => console.log('Success:', data))\n.catch(error => console.error('Error:', error));"
      },
      "real_data_available": true,
      "last_tested": "2025-09-26T22:38:59.694801"
    },
    "/stats/rotation": {
      "path": "/stats/rotation",
      "method": "GET",
      "summary": "Get Rotation statistics with metrics",
      "description": "Returns statistical data and metrics for rotation. Includes custom metrics like eCPT, eCPB, trials, and buyouts. Array of 0 items",
      "category": "stats",
      "tags": [
        "statistics",
        "metrics",
        "analytics"
      ],
      "parameters": [
        {
          "name": "datePreset",
          "type": "str",
          "required": true,
          "description": "Time period for data filtering. Required for stats endpoints.",
          "example": "last_7_days"
        },
        {
          "name": "timezone",
          "type": "str",
          "required": true,
          "description": "Timezone for date calculations. Required for stats endpoints.",
          "example": "UTC"
        },
        {
          "name": "limit",
          "type": "int",
          "required": false,
          "description": "Maximum number of records to return",
          "example": 5
        },
        {
          "name": "offset",
          "type": "int",
          "required": false,
          "description": "Number of records to skip for pagination",
          "example": 0
        },
        {
          "name": "groupBy",
          "type": "str",
          "required": false,
          "description": "Field to group results by",
          "example": "id"
        },
        {
          "name": "sortColumn",
          "type": "str",
          "required": false,
          "description": "Column to sort results by",
          "example": "clicks"
        },
        {
          "name": "sortType",
          "type": "str",
          "required": false,
          "description": "Sort direction (asc/desc)",
          "example": "desc"
        }
      ],
      "request_schema": {
        "type": "object",
        "properties": {
          "datePreset": {
            "type": "string",
            "description": "Time period for data filtering. Required for stats endpoints.",
            "example": "last_7_days"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone for date calculations. Required for stats endpoints.",
            "example": "UTC"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of records to return",
            "example": 5
          },
          "offset": {
            "type": "integer",
            "description": "Number of records to skip for pagination",
            "example": 0
          },
          "groupBy": {
            "type": "string",
            "description": "Field to group results by",
            "example": "id"
          },
          "sortColumn": {
            "type": "string",
            "description": "Column to sort results by",
            "example": "clicks"
          },
          "sortType": {
            "type": "string",
            "description": "Sort direction (asc/desc)",
            "example": "desc"
          }
        },
        "required": [
          "datePreset",
          "timezone"
        ]
      },
      "response_schema": {},
      "response_example": [],
      "ai_instructions": [
        "Always use 'api-key' header for authentication, NOT Bearer token",
        "Include datePreset and timezone parameters for stats endpoints",
        "Stats endpoints return custom metrics with UUID keys",
        "Look for eCPT, eCPB, trials, buyouts in response",
        "Use groupBy parameter to aggregate data",
        "Sort by clicks or cost for meaningful results"
      ],
      "use_cases": [],
      "error_handling": {
        "common_errors": {
          "401": {
            "description": "Unauthorized - Wrong API key or header format",
            "solution": "Use 'api-key' header, not Bearer token"
          },
          "400": {
            "description": "Bad Request - Missing required parameters",
            "solution": "Include datePreset and timezone for stats endpoints"
          },
          "404": {
            "description": "Not Found - Invalid endpoint or resource ID",
            "solution": "Check endpoint path and resource existence"
          }
        }
      },
      "code_examples": {
        "python": "import requests\nimport os\n\napi_key = os.getenv('binomPublic')\nurl = \"https://pierdun.com/public/api/v1/stats/rotation\"\n\nheaders = {\n    \"api-key\": api_key,\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n}\n\nparams = {\n    \"datePreset\": \"last_7_days\",\n    \"timezone\": \"UTC\",\n    \"limit\": 5,\n    \"offset\": 0,\n    \"groupBy\": \"id\",\n    \"sortColumn\": \"clicks\",\n    \"sortType\": \"desc\"\n}\n\nresponse = requests.get(url, headers=headers, params=params)\n\nif response.status_code == 200:\n    data = response.json()\n    print(f\"Success: {len(data)} records\")\nelse:\n    print(f\"Error: {response.status_code} - {response.text}\")",
        "curl": "curl -X GET \"https://pierdun.com/public/api/v1/stats/rotation?datePreset=last_7_days&timezone=UTC&limit=5&offset=0&groupBy=id&sortColumn=clicks&sortType=desc\" \\\n  -H \"api-key: $binomPublic\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/json\"",
        "javascript": "const apiKey = process.env.binomPublic;\nconst url = 'https://pierdun.com/public/api/v1/stats/rotation';\n\nconst params = new URLSearchParams({\"datePreset\": \"last_7_days\", \"timezone\": \"UTC\", \"limit\": 5, \"offset\": 0, \"groupBy\": \"id\", \"sortColumn\": \"clicks\", \"sortType\": \"desc\"});\n\nfetch(`${url}?${params}`, {\n  method: 'GET',\n  headers: {\n    'api-key': apiKey,\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n})\n.then(response => response.json())\n.then(data => console.log('Success:', data))\n.catch(error => console.error('Error:', error));"
      },
      "real_data_available": true,
      "last_tested": "2025-09-26T22:38:59.694801"
    },
    "/stats/traffic_source": {
      "path": "/stats/traffic_source",
      "method": "GET",
      "summary": "Get Traffic Source statistics with metrics",
      "description": "Returns statistical data and metrics for traffic source. Includes custom metrics like eCPT, eCPB, trials, and buyouts. Array of 6 items (objects with 15 fields)",
      "category": "stats",
      "tags": [
        "statistics",
        "metrics",
        "analytics",
        "traffic_source"
      ],
      "parameters": [
        {
          "name": "datePreset",
          "type": "str",
          "required": true,
          "description": "Time period for data filtering. Required for stats endpoints.",
          "example": "last_7_days"
        },
        {
          "name": "timezone",
          "type": "str",
          "required": true,
          "description": "Timezone for date calculations. Required for stats endpoints.",
          "example": "UTC"
        },
        {
          "name": "limit",
          "type": "int",
          "required": false,
          "description": "Maximum number of records to return",
          "example": 5
        },
        {
          "name": "offset",
          "type": "int",
          "required": false,
          "description": "Number of records to skip for pagination",
          "example": 0
        },
        {
          "name": "groupBy",
          "type": "str",
          "required": false,
          "description": "Field to group results by",
          "example": "id"
        },
        {
          "name": "sortColumn",
          "type": "str",
          "required": false,
          "description": "Column to sort results by",
          "example": "clicks"
        },
        {
          "name": "sortType",
          "type": "str",
          "required": false,
          "description": "Sort direction (asc/desc)",
          "example": "desc"
        }
      ],
      "request_schema": {
        "type": "object",
        "properties": {
          "datePreset": {
            "type": "string",
            "description": "Time period for data filtering. Required for stats endpoints.",
            "example": "last_7_days"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone for date calculations. Required for stats endpoints.",
            "example": "UTC"
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of records to return",
            "example": 5
          },
          "offset": {
            "type": "integer",
            "description": "Number of records to skip for pagination",
            "example": 0
          },
          "groupBy": {
            "type": "string",
            "description": "Field to group results by",
            "example": "id"
          },
          "sortColumn": {
            "type": "string",
            "description": "Column to sort results by",
            "example": "clicks"
          },
          "sortType": {
            "type": "string",
            "description": "Sort direction (asc/desc)",
            "example": "desc"
          }
        },
        "required": [
          "datePreset",
          "timezone"
        ]
      },
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "25"
          },
          "name": {
            "type": "string",
            "example": "PropellerAds(mr.aleksvagano - KUDI) - Pavels"
          },
          "clicks": {
            "type": "string",
            "example": "3120916"
          },
          "leads": {
            "type": "string",
            "example": "3663"
          },
          "cr": {
            "type": "string",
            "example": "0.117369"
          },
          "bots": {
            "type": "string",
            "example": "0"
          },
          "epc": {
            "type": "string",
            "example": "0.001459"
          },
          "cpc": {
            "type": "string",
            "example": "0.002317"
          },
          "revenue": {
            "type": "string",
            "example": "4552"
          },
          "cost": {
            "type": "string",
            "example": "7231.5723278699"
          },
          "profit": {
            "type": "string",
            "example": "-2679.5723278699"
          },
          "roi": {
            "type": "string",
            "example": "-37.0538"
          },
          "unique_clicks": {
            "type": "string",
            "example": "1830508"
          },
          "is_deleted": {
            "type": "string",
            "example": ""
          },
          "is_noted": {
            "type": "integer",
            "example": false
          }
        }
      },
      "response_example": [
        {
          "id": "25",
          "name": "PropellerAds(mr.aleksvagano - KUDI) - Pavels",
          "clicks": "3120916",
          "leads": "3663",
          "cr": "0.117369",
          "bots": "0",
          "epc": "0.001459",
          "cpc": "0.002317",
          "revenue": "4552",
          "cost": "7231.5723278699",
          "profit": "-2679.5723278699",
          "roi": "-37.0538",
          "unique_clicks": "1830508",
          "is_deleted": "",
          "is_noted": false
        },
        {
          "id": "16",
          "name": "Junky(Kudi.kulina) - Yaroslav - CPT",
          "clicks": "1175250",
          "leads": "1801",
          "cr": "0.153244",
          "bots": "0",
          "epc": "0.002158",
          "cpc": "0.001641",
          "revenue": "2536",
          "cost": "1928.3788125018",
          "profit": "607.62118749815",
          "roi": "31.509431",
          "unique_clicks": "883245",
          "is_deleted": "",
          "is_noted": false
        }
      ],
      "ai_instructions": [
        "Always use 'api-key' header for authentication, NOT Bearer token",
        "Include datePreset and timezone parameters for stats endpoints",
        "Stats endpoints return custom metrics with UUID keys",
        "Look for eCPT, eCPB, trials, buyouts in response",
        "Use groupBy parameter to aggregate data",
        "Sort by clicks or cost for meaningful results"
      ],
      "use_cases": [],
      "error_handling": {
        "common_errors": {
          "401": {
            "description": "Unauthorized - Wrong API key or header format",
            "solution": "Use 'api-key' header, not Bearer token"
          },
          "400": {
            "description": "Bad Request - Missing required parameters",
            "solution": "Include datePreset and timezone for stats endpoints"
          },
          "404": {
            "description": "Not Found - Invalid endpoint or resource ID",
            "solution": "Check endpoint path and resource existence"
          }
        }
      },
      "code_examples": {
        "python": "import requests\nimport os\n\napi_key = os.getenv('binomPublic')\nurl = \"https://pierdun.com/public/api/v1/stats/traffic_source\"\n\nheaders = {\n    \"api-key\": api_key,\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n}\n\nparams = {\n    \"datePreset\": \"last_7_days\",\n    \"timezone\": \"UTC\",\n    \"limit\": 5,\n    \"offset\": 0,\n    \"groupBy\": \"id\",\n    \"sortColumn\": \"clicks\",\n    \"sortType\": \"desc\"\n}\n\nresponse = requests.get(url, headers=headers, params=params)\n\nif response.status_code == 200:\n    data = response.json()\n    print(f\"Success: {len(data)} records\")\nelse:\n    print(f\"Error: {response.status_code} - {response.text}\")",
        "curl": "curl -X GET \"https://pierdun.com/public/api/v1/stats/traffic_source?datePreset=last_7_days&timezone=UTC&limit=5&offset=0&groupBy=id&sortColumn=clicks&sortType=desc\" \\\n  -H \"api-key: $binomPublic\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/json\"",
        "javascript": "const apiKey = process.env.binomPublic;\nconst url = 'https://pierdun.com/public/api/v1/stats/traffic_source';\n\nconst params = new URLSearchParams({\"datePreset\": \"last_7_days\", \"timezone\": \"UTC\", \"limit\": 5, \"offset\": 0, \"groupBy\": \"id\", \"sortColumn\": \"clicks\", \"sortType\": \"desc\"});\n\nfetch(`${url}?${params}`, {\n  method: 'GET',\n  headers: {\n    'api-key': apiKey,\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n})\n.then(response => response.json())\n.then(data => console.log('Success:', data))\n.catch(error => console.error('Error:', error));"
      },
      "real_data_available": true,
      "last_tested": "2025-09-26T22:38:59.694801"
    }
  },
  "schemas": {
    "/info/affiliate_network": {
      "endpoint": "/info/affiliate_network",
      "method": "GET",
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Test Network 1 Renamed Again"
          },
          "is_deleted": {
            "type": "integer",
            "example": false
          },
          "offers": {
            "type": "string",
            "example": "0"
          },
          "mean_time_to_convert": {
            "type": "unknown",
            "value": "None"
          },
          "seconds_since_last_lead": {
            "type": "unknown",
            "value": "None"
          },
          "clicks_last_hour": {
            "type": "string",
            "example": "0"
          },
          "leads_last_hour": {
            "type": "string",
            "example": "0"
          },
          "profit_last_hour": {
            "type": "integer",
            "example": 0
          },
          "first_click_time": {
            "type": "unknown",
            "value": "None"
          },
          "clicks": {
            "type": "string",
            "example": "0"
          },
          "is_noted": {
            "type": "integer",
            "example": false
          }
        }
      },
      "data_type": "list",
      "sample_fields": [
        "id",
        "name",
        "is_deleted",
        "offers",
        "mean_time_to_convert",
        "seconds_since_last_lead",
        "clicks_last_hour",
        "leads_last_hour",
        "profit_last_hour",
        "first_click_time",
        "clicks",
        "is_noted"
      ],
      "summary": "Array of 6 items (objects with 12 fields)",
      "field_count": 12,
      "ai_readable": true
    },
    "/info/campaign": {
      "endpoint": "/info/campaign",
      "method": "GET",
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "i15 - USAEN - APP - ISP:WORK:cost:weight:not opt:not bider"
          },
          "is_deleted": {
            "type": "integer",
            "example": false
          },
          "current_cpc": {
            "type": "integer",
            "example": 0
          },
          "group_name": {
            "type": "unknown",
            "value": "None"
          },
          "mean_time_to_convert": {
            "type": "number",
            "example": 255649.75613873542
          },
          "seconds_since_last_lead": {
            "type": "string",
            "example": "804"
          },
          "clicks_last_hour": {
            "type": "string",
            "example": "2716"
          },
          "leads_last_hour": {
            "type": "string",
            "example": "2"
          },
          "profit_last_hour": {
            "type": "number",
            "example": -13.411615250500006
          },
          "first_click_time": {
            "type": "string",
            "example": "2025-01-05 15:39:24"
          },
          "clicks": {
            "type": "string",
            "example": "229847"
          },
          "link": {
            "type": "string",
            "example": "https://pornenthusiast.com/click?key=welcomepromo-i6&clickid={conversions_tracking}&cost={actual_cost}&sitename={src_hostname}&campaignid={campaign_id}&categoryid={category_id}&geo={country}&variation={variation_id}&keywords={tags}&timestamp={time}&format={format}"
          },
          "is_noted": {
            "type": "integer",
            "example": true
          },
          "is_domain_banned": {
            "type": "integer",
            "example": false
          }
        }
      },
      "data_type": "list",
      "sample_fields": [
        "id",
        "name",
        "is_deleted",
        "current_cpc",
        "group_name",
        "mean_time_to_convert",
        "seconds_since_last_lead",
        "clicks_last_hour",
        "leads_last_hour",
        "profit_last_hour",
        "first_click_time",
        "clicks",
        "link",
        "is_noted",
        "is_domain_banned"
      ],
      "summary": "Array of 6 items (objects with 15 fields)",
      "field_count": 15,
      "ai_readable": true
    },
    "/info/landing": {
      "endpoint": "/info/landing",
      "method": "GET",
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "TRJ47 / 81% dmgd - Adult - NO TOKENS"
          },
          "is_deleted": {
            "type": "integer",
            "example": false
          },
          "language": {
            "type": "string",
            "example": ""
          },
          "location": {
            "type": "string",
            "example": "landers/sasa/index.html"
          },
          "group_name": {
            "type": "unknown",
            "value": "None"
          },
          "mean_time_to_convert": {
            "type": "number",
            "example": 253584.40010655302
          },
          "seconds_since_last_lead": {
            "type": "string",
            "example": "1184"
          },
          "clicks_last_hour": {
            "type": "string",
            "example": "817"
          },
          "leads_last_hour": {
            "type": "string",
            "example": "1"
          },
          "profit_last_hour": {
            "type": "number",
            "example": -0.5474578457000008
          },
          "first_click_time": {
            "type": "string",
            "example": "2025-01-05 15:37:11"
          },
          "clicks": {
            "type": "string",
            "example": "201846"
          },
          "is_noted": {
            "type": "integer",
            "example": false
          },
          "is_integrated": {
            "type": "integer",
            "example": true
          },
          "is_domain_banned": {
            "type": "integer",
            "example": false
          }
        }
      },
      "data_type": "list",
      "sample_fields": [
        "id",
        "name",
        "is_deleted",
        "language",
        "location",
        "group_name",
        "mean_time_to_convert",
        "seconds_since_last_lead",
        "clicks_last_hour",
        "leads_last_hour",
        "profit_last_hour",
        "first_click_time",
        "clicks",
        "is_noted",
        "is_integrated",
        "is_domain_banned"
      ],
      "summary": "Array of 6 items (objects with 16 fields)",
      "field_count": 16,
      "ai_readable": true
    },
    "/info/offer": {
      "endpoint": "/info/offer",
      "method": "GET",
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "inHaus - IOS - AI Smart Block - (Branch)"
          },
          "is_deleted": {
            "type": "integer",
            "example": false
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "https://ovd0o.app.link/C102yLXNRPb?%243p=a_custom_1403847507905986865&~secondary_publisher={campaign}&~placement={t1}&~ad_id={clickid}"
          },
          "group_name": {
            "type": "unknown",
            "value": "None"
          },
          "affiliate_network": {
            "type": "unknown",
            "value": "None"
          },
          "mean_time_to_convert": {
            "type": "number",
            "example": 197903.51971608834
          },
          "seconds_since_last_lead": {
            "type": "string",
            "example": "1312320"
          },
          "clicks_last_hour": {
            "type": "string",
            "example": "1"
          },
          "leads_last_hour": {
            "type": "string",
            "example": "0"
          },
          "profit_last_hour": {
            "type": "number",
            "example": -0.00097344
          },
          "first_click_time": {
            "type": "string",
            "example": "2025-01-05 15:37:11"
          },
          "clicks": {
            "type": "string",
            "example": "3"
          },
          "is_noted": {
            "type": "integer",
            "example": false
          }
        }
      },
      "data_type": "list",
      "sample_fields": [
        "id",
        "name",
        "is_deleted",
        "country",
        "url",
        "group_name",
        "affiliate_network",
        "mean_time_to_convert",
        "seconds_since_last_lead",
        "clicks_last_hour",
        "leads_last_hour",
        "profit_last_hour",
        "first_click_time",
        "clicks",
        "is_noted"
      ],
      "summary": "Array of 6 items (objects with 15 fields)",
      "field_count": 15,
      "ai_readable": true
    },
    "/info/rotation": {
      "endpoint": "/info/rotation",
      "method": "GET",
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "totals"
          },
          "total_count": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "data_type": "list",
      "sample_fields": [
        "id",
        "total_count"
      ],
      "summary": "Array of 1 items (objects with 2 fields)",
      "field_count": 2,
      "ai_readable": true
    },
    "/info/traffic_source": {
      "endpoint": "/info/traffic_source",
      "method": "GET",
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Advertizer(vika92kozlova@gmail.com) - Pavel"
          },
          "is_deleted": {
            "type": "integer",
            "example": false
          },
          "campaigns": {
            "type": "string",
            "example": "2"
          },
          "mean_time_to_convert": {
            "type": "number",
            "example": 197032.4514563107
          },
          "seconds_since_last_lead": {
            "type": "string",
            "example": "17068598"
          },
          "clicks_last_hour": {
            "type": "string",
            "example": "0"
          },
          "leads_last_hour": {
            "type": "string",
            "example": "0"
          },
          "profit_last_hour": {
            "type": "integer",
            "example": 0
          },
          "first_click_time": {
            "type": "string",
            "example": "2025-01-05 17:41:10"
          },
          "clicks": {
            "type": "string",
            "example": "5"
          },
          "is_noted": {
            "type": "integer",
            "example": false
          }
        }
      },
      "data_type": "list",
      "sample_fields": [
        "id",
        "name",
        "is_deleted",
        "campaigns",
        "mean_time_to_convert",
        "seconds_since_last_lead",
        "clicks_last_hour",
        "leads_last_hour",
        "profit_last_hour",
        "first_click_time",
        "clicks",
        "is_noted"
      ],
      "summary": "Array of 6 items (objects with 12 fields)",
      "field_count": 12,
      "ai_readable": true
    },
    "/stats/affiliate_network": {
      "endpoint": "/stats/affiliate_network",
      "method": "GET",
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "15"
          },
          "name": {
            "type": "string",
            "example": "Updated Test Network"
          },
          "offers": {
            "type": "string",
            "example": "0"
          },
          "clicks": {
            "type": "string",
            "example": "0"
          },
          "leads": {
            "type": "string",
            "example": "0"
          },
          "cr": {
            "type": "string",
            "example": "0"
          },
          "bots": {
            "type": "string",
            "example": "0"
          },
          "epc": {
            "type": "string",
            "example": "0"
          },
          "cpc": {
            "type": "string",
            "example": "0"
          },
          "revenue": {
            "type": "string",
            "example": "0"
          },
          "cost": {
            "type": "string",
            "example": "0"
          },
          "profit": {
            "type": "string",
            "example": "0"
          },
          "roi": {
            "type": "string",
            "example": "0"
          },
          "unique_clicks": {
            "type": "string",
            "example": "0"
          },
          "is_deleted": {
            "type": "string",
            "example": ""
          },
          "is_noted": {
            "type": "integer",
            "example": false
          }
        }
      },
      "data_type": "list",
      "sample_fields": [
        "id",
        "name",
        "offers",
        "clicks",
        "leads",
        "cr",
        "bots",
        "epc",
        "cpc",
        "revenue",
        "cost",
        "profit",
        "roi",
        "unique_clicks",
        "is_deleted",
        "is_noted"
      ],
      "summary": "Array of 6 items (objects with 16 fields)",
      "field_count": 16,
      "ai_readable": true
    },
    "/stats/campaign": {
      "endpoint": "/stats/campaign",
      "method": "GET",
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "167"
          },
          "eCPB::013d4336-8f03-42a4-a36d-ff6c0d8f2efd": {
            "type": "string",
            "example": "59.575007119138"
          },
          "TrialCancel::1fc9e6ad-6e6b-45de-9050-86a12aa9fcbb": {
            "type": "string",
            "example": "53"
          },
          "Buyouts::441d199a-9902-410e-9033-656ca6e67e1e": {
            "type": "string",
            "example": "13"
          },
          "Trials::4adcb8e3-e719-425e-9882-771a4bf4d143": {
            "type": "string",
            "example": "87"
          },
          "Active Trials::579e88c5-7fcd-4af5-87d9-0e799dd80065": {
            "type": "string",
            "example": "21"
          },
          "Trial %::9ff82bf7-7ded-4d28-a223-7a33b5a2e234": {
            "type": "string",
            "example": "14.356435643564"
          },
          "SubCancel::a9a13783-a0da-4d99-a6db-fd6087977c3f": {
            "type": "string",
            "example": "0"
          },
          "Trialcancel %::b5b34653-8bfa-44af-afbc-a118b89be692": {
            "type": "string",
            "example": "60.919540229885"
          },
          "eCPA::c04d981c-f898-4385-bfc4-7c3d0fca220c": {
            "type": "string",
            "example": "1.2780117038759"
          },
          "eCPT::c560568d-f58b-4d05-b5d8-9c2f28bd620d": {
            "type": "string",
            "example": "8.9020125580321"
          },
          "Buyouts %::c7cbf9d0-a3fc-4315-be91-578bb1c8cd8c": {
            "type": "string",
            "example": "14.942528735632"
          },
          "Active Sub::ce3527a0-2a79-482c-9800-0fdb35787799": {
            "type": "string",
            "example": "13"
          },
          "name": {
            "type": "string",
            "example": "JOJ5 / PROPSSP / PT - WEB / BR:WORK:cost:weight:opt:bider"
          },
          "group_name": {
            "type": "string",
            "example": ""
          },
          "traffic_source": {
            "type": "string",
            "example": "PropellerAds(mr.aleksvagano - KUDI) - Pavels"
          },
          "clicks": {
            "type": "string",
            "example": "787665"
          },
          "lander_views": {
            "type": "string",
            "example": "688320"
          },
          "lander_clicks": {
            "type": "string",
            "example": "27154"
          },
          "lander_ctr": {
            "type": "string",
            "example": "3.944967"
          },
          "leads": {
            "type": "string",
            "example": "606"
          },
          "cr": {
            "type": "string",
            "example": "0.076936"
          },
          "bots": {
            "type": "string",
            "example": "0"
          },
          "epc": {
            "type": "string",
            "example": "0.000884"
          },
          "cpc": {
            "type": "string",
            "example": "0.000983"
          },
          "revenue": {
            "type": "string",
            "example": "696"
          },
          "cost": {
            "type": "string",
            "example": "774.47509254879"
          },
          "profit": {
            "type": "string",
            "example": "-78.475092548791"
          },
          "roi": {
            "type": "string",
            "example": "-10.132681"
          },
          "unique_clicks": {
            "type": "string",
            "example": "468057"
          },
          "is_deleted": {
            "type": "string",
            "example": ""
          },
          "is_noted": {
            "type": "integer",
            "example": true
          },
          "is_domain_banned": {
            "type": "integer",
            "example": false
          }
        }
      },
      "data_type": "list",
      "sample_fields": [
        "id",
        "eCPB::013d4336-8f03-42a4-a36d-ff6c0d8f2efd",
        "TrialCancel::1fc9e6ad-6e6b-45de-9050-86a12aa9fcbb",
        "Buyouts::441d199a-9902-410e-9033-656ca6e67e1e",
        "Trials::4adcb8e3-e719-425e-9882-771a4bf4d143",
        "Active Trials::579e88c5-7fcd-4af5-87d9-0e799dd80065",
        "Trial %::9ff82bf7-7ded-4d28-a223-7a33b5a2e234",
        "SubCancel::a9a13783-a0da-4d99-a6db-fd6087977c3f",
        "Trialcancel %::b5b34653-8bfa-44af-afbc-a118b89be692",
        "eCPA::c04d981c-f898-4385-bfc4-7c3d0fca220c",
        "eCPT::c560568d-f58b-4d05-b5d8-9c2f28bd620d",
        "Buyouts %::c7cbf9d0-a3fc-4315-be91-578bb1c8cd8c",
        "Active Sub::ce3527a0-2a79-482c-9800-0fdb35787799",
        "name",
        "group_name",
        "traffic_source",
        "clicks",
        "lander_views",
        "lander_clicks",
        "lander_ctr",
        "leads",
        "cr",
        "bots",
        "epc",
        "cpc",
        "revenue",
        "cost",
        "profit",
        "roi",
        "unique_clicks",
        "is_deleted",
        "is_noted",
        "is_domain_banned"
      ],
      "summary": "Array of 6 items (objects with 33 fields)",
      "field_count": 33,
      "ai_readable": true
    },
    "/stats/landing": {
      "endpoint": "/stats/landing",
      "method": "GET",
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "17"
          },
          "language": {
            "type": "string",
            "example": ""
          },
          "name": {
            "type": "string",
            "example": "Gogl style with timer - NO TOKEN"
          },
          "group_name": {
            "type": "string",
            "example": ""
          },
          "clicks": {
            "type": "string",
            "example": "749507"
          },
          "lander_ctr": {
            "type": "string",
            "example": "1.239081"
          },
          "leads": {
            "type": "string",
            "example": "938"
          },
          "cr": {
            "type": "string",
            "example": "0.125149"
          },
          "bots": {
            "type": "string",
            "example": "0"
          },
          "epc": {
            "type": "string",
            "example": "0.001452"
          },
          "cpc": {
            "type": "string",
            "example": "0.002679"
          },
          "revenue": {
            "type": "string",
            "example": "1088"
          },
          "cost": {
            "type": "string",
            "example": "2007.6334631197"
          },
          "profit": {
            "type": "string",
            "example": "-919.63346311967"
          },
          "roi": {
            "type": "string",
            "example": "-45.806841"
          },
          "unique_clicks": {
            "type": "string",
            "example": "466127"
          },
          "lander_clicks": {
            "type": "string",
            "example": "9287"
          },
          "lander_views": {
            "type": "string",
            "example": "749507"
          },
          "is_deleted": {
            "type": "string",
            "example": ""
          },
          "is_noted": {
            "type": "integer",
            "example": false
          },
          "is_integrated": {
            "type": "integer",
            "example": true
          },
          "url": {
            "type": "string",
            "example": "landers/farmaldgnrodois442eamdmnfnss/google-viruse-white-gh-pages/index.html"
          },
          "is_domain_banned": {
            "type": "integer",
            "example": false
          }
        }
      },
      "data_type": "list",
      "sample_fields": [
        "id",
        "language",
        "name",
        "group_name",
        "clicks",
        "lander_ctr",
        "leads",
        "cr",
        "bots",
        "epc",
        "cpc",
        "revenue",
        "cost",
        "profit",
        "roi",
        "unique_clicks",
        "lander_clicks",
        "lander_views",
        "is_deleted",
        "is_noted",
        "is_integrated",
        "url",
        "is_domain_banned"
      ],
      "summary": "Array of 6 items (objects with 23 fields)",
      "field_count": 23,
      "ai_readable": true
    },
    "/stats/offer": {
      "endpoint": "/stats/offer",
      "method": "GET",
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "35"
          },
          "country": {
            "type": "string",
            "example": ""
          },
          "name": {
            "type": "string",
            "example": "APPSTERO CPT - Pavel - Dynamic CPT offers - Multigeo - #1"
          },
          "group_name": {
            "type": "string",
            "example": ""
          },
          "affiliate_network": {
            "type": "string",
            "example": ""
          },
          "clicks": {
            "type": "string",
            "example": "851901"
          },
          "lander_ctr": {
            "type": "string",
            "example": "4.901274"
          },
          "leads": {
            "type": "string",
            "example": "1259"
          },
          "cr": {
            "type": "string",
            "example": "0.147787"
          },
          "bots": {
            "type": "string",
            "example": "0"
          },
          "epc": {
            "type": "string",
            "example": "0.002235"
          },
          "cpc": {
            "type": "string",
            "example": "0.002342"
          },
          "revenue": {
            "type": "string",
            "example": "1904"
          },
          "cost": {
            "type": "string",
            "example": "1995.1468548785"
          },
          "profit": {
            "type": "string",
            "example": "-91.146854878457"
          },
          "roi": {
            "type": "string",
            "example": "-4.568428"
          },
          "payout": {
            "type": "object",
            "properties": {
              "money": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "example": 0
                  },
                  "currency": {
                    "type": "string",
                    "example": "USD"
                  }
                }
              },
              "isAuto": {
                "type": "integer",
                "example": true
              },
              "isUpsell": {
                "type": "integer",
                "example": true
              }
            }
          },
          "unique_clicks": {
            "type": "string",
            "example": "481858"
          },
          "lander_clicks": {
            "type": "string",
            "example": "41754"
          },
          "lander_views": {
            "type": "string",
            "example": "851901"
          },
          "is_deleted": {
            "type": "string",
            "example": ""
          },
          "url": {
            "type": "string",
            "example": "https://track.spottly-cleaner-app.com/click?pid=122&offer_id=749&sub1={clickid}"
          },
          "is_noted": {
            "type": "integer",
            "example": false
          }
        }
      },
      "data_type": "list",
      "sample_fields": [
        "id",
        "country",
        "name",
        "group_name",
        "affiliate_network",
        "clicks",
        "lander_ctr",
        "leads",
        "cr",
        "bots",
        "epc",
        "cpc",
        "revenue",
        "cost",
        "profit",
        "roi",
        "payout",
        "unique_clicks",
        "lander_clicks",
        "lander_views",
        "is_deleted",
        "url",
        "is_noted"
      ],
      "summary": "Array of 6 items (objects with 23 fields)",
      "field_count": 23,
      "ai_readable": true
    },
    "/stats/rotation": {
      "endpoint": "/stats/rotation",
      "method": "GET",
      "response_schema": {},
      "data_type": "list",
      "sample_fields": [],
      "summary": "Array of 0 items",
      "field_count": 0,
      "ai_readable": true
    },
    "/stats/traffic_source": {
      "endpoint": "/stats/traffic_source",
      "method": "GET",
      "response_schema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "25"
          },
          "name": {
            "type": "string",
            "example": "PropellerAds(mr.aleksvagano - KUDI) - Pavels"
          },
          "clicks": {
            "type": "string",
            "example": "3120916"
          },
          "leads": {
            "type": "string",
            "example": "3663"
          },
          "cr": {
            "type": "string",
            "example": "0.117369"
          },
          "bots": {
            "type": "string",
            "example": "0"
          },
          "epc": {
            "type": "string",
            "example": "0.001459"
          },
          "cpc": {
            "type": "string",
            "example": "0.002317"
          },
          "revenue": {
            "type": "string",
            "example": "4552"
          },
          "cost": {
            "type": "string",
            "example": "7231.5723278699"
          },
          "profit": {
            "type": "string",
            "example": "-2679.5723278699"
          },
          "roi": {
            "type": "string",
            "example": "-37.0538"
          },
          "unique_clicks": {
            "type": "string",
            "example": "1830508"
          },
          "is_deleted": {
            "type": "string",
            "example": ""
          },
          "is_noted": {
            "type": "integer",
            "example": false
          }
        }
      },
      "data_type": "list",
      "sample_fields": [
        "id",
        "name",
        "clicks",
        "leads",
        "cr",
        "bots",
        "epc",
        "cpc",
        "revenue",
        "cost",
        "profit",
        "roi",
        "unique_clicks",
        "is_deleted",
        "is_noted"
      ],
      "summary": "Array of 6 items (objects with 15 fields)",
      "field_count": 15,
      "ai_readable": true
    }
  },
  "real_examples": {
    "campaign_optimization": {
      "description": "Real campaign optimization workflow",
      "steps": [
        {
          "step": 1,
          "action": "Get campaign list",
          "endpoint": "/info/campaign",
          "sample_response": [
            {
              "id": 1,
              "name": "i15 - USAEN - APP - ISP:WORK:cost:weight:not opt:not bider",
              "is_deleted": false,
              "current_cpc": 0,
              "group_name": null,
              "mean_time_to_convert": 255649.75613873542,
              "seconds_since_last_lead": "804",
              "clicks_last_hour": "2716",
              "leads_last_hour": "2",
              "profit_last_hour": -13.411615250500006,
              "first_click_time": "2025-01-05 15:39:24",
              "clicks": "229847",
              "link": "https://pornenthusiast.com/click?key=welcomepromo-i6&clickid={conversions_tracking}&cost={actual_cost}&sitename={src_hostname}&campaignid={campaign_id}&categoryid={category_id}&geo={country}&variation={variation_id}&keywords={tags}&timestamp={time}&format={format}",
              "is_noted": true,
              "is_domain_banned": false
            },
            {
              "id": 2,
              "name": "i15 - USAEN - APP - WIFI:WORK:cost:weight:not opt:not bider",
              "is_deleted": false,
              "current_cpc": 0,
              "group_name": null,
              "mean_time_to_convert": 240620.28948194662,
              "seconds_since_last_lead": "534",
              "clicks_last_hour": "2611",
              "leads_last_hour": "2",
              "profit_last_hour": -12.874864727600006,
              "first_click_time": "2025-01-05 15:39:02",
              "clicks": "229465",
              "link": "https://pornenthusiast.com/click?key=welcomepromo-i5&clickid={conversions_tracking}&cost={actual_cost}&sitename={src_hostname}&campaignid={campaign_id}&categoryid={category_id}&geo={country}&variation={variation_id}&keywords={tags}&timestamp={time}&format={format}",
              "is_noted": true,
              "is_domain_banned": false
            }
          ]
        },
        {
          "step": 2,
          "action": "Get campaign statistics",
          "endpoint": "/stats/campaign",
          "sample_response": [
            {
              "id": "167",
              "eCPB::013d4336-8f03-42a4-a36d-ff6c0d8f2efd": "59.575007119138",
              "TrialCancel::1fc9e6ad-6e6b-45de-9050-86a12aa9fcbb": "53",
              "Buyouts::441d199a-9902-410e-9033-656ca6e67e1e": "13",
              "Trials::4adcb8e3-e719-425e-9882-771a4bf4d143": "87",
              "Active Trials::579e88c5-7fcd-4af5-87d9-0e799dd80065": "21",
              "Trial %::9ff82bf7-7ded-4d28-a223-7a33b5a2e234": "14.356435643564",
              "SubCancel::a9a13783-a0da-4d99-a6db-fd6087977c3f": "0",
              "Trialcancel %::b5b34653-8bfa-44af-afbc-a118b89be692": "60.919540229885",
              "eCPA::c04d981c-f898-4385-bfc4-7c3d0fca220c": "1.2780117038759",
              "eCPT::c560568d-f58b-4d05-b5d8-9c2f28bd620d": "8.9020125580321",
              "Buyouts %::c7cbf9d0-a3fc-4315-be91-578bb1c8cd8c": "14.942528735632",
              "Active Sub::ce3527a0-2a79-482c-9800-0fdb35787799": "13",
              "name": "JOJ5 / PROPSSP / PT - WEB / BR:WORK:cost:weight:opt:bider",
              "group_name": "",
              "traffic_source": "PropellerAds(mr.aleksvagano - KUDI) - Pavels",
              "clicks": "787665",
              "lander_views": "688320",
              "lander_clicks": "27154",
              "lander_ctr": "3.944967",
              "leads": "606",
              "cr": "0.076936",
              "bots": "0",
              "epc": "0.000884",
              "cpc": "0.000983",
              "revenue": "696",
              "cost": "774.47509254879",
              "profit": "-78.475092548791",
              "roi": "-10.132681",
              "unique_clicks": "468057",
              "is_deleted": "",
              "is_noted": true,
              "is_domain_banned": false
            },
            {
              "id": "152",
              "eCPB::013d4336-8f03-42a4-a36d-ff6c0d8f2efd": "99.543829043687",
              "TrialCancel::1fc9e6ad-6e6b-45de-9050-86a12aa9fcbb": "25",
              "Buyouts::441d199a-9902-410e-9033-656ca6e67e1e": "9",
              "Trials::4adcb8e3-e719-425e-9882-771a4bf4d143": "49",
              "Active Trials::579e88c5-7fcd-4af5-87d9-0e799dd80065": "15",
              "Trial %::9ff82bf7-7ded-4d28-a223-7a33b5a2e234": "41.880341880342",
              "SubCancel::a9a13783-a0da-4d99-a6db-fd6087977c3f": "1",
              "Trialcancel %::b5b34653-8bfa-44af-afbc-a118b89be692": "51.020408163265",
              "eCPA::c04d981c-f898-4385-bfc4-7c3d0fca220c": "7.6572176187451",
              "eCPT::c560568d-f58b-4d05-b5d8-9c2f28bd620d": "18.283560436595",
              "Buyouts %::c7cbf9d0-a3fc-4315-be91-578bb1c8cd8c": "18.367346938776",
              "Active Sub::ce3527a0-2a79-482c-9800-0fdb35787799": "8",
              "name": "JOJ5 / PROPSSP / ENG - WEB / US:WORK:cost:weight:opt:bider",
              "group_name": "",
              "traffic_source": "PropellerAds(mr.aleksvagano - KUDI) - Pavels",
              "clicks": "513190",
              "lander_views": "501152",
              "lander_clicks": "9956",
              "lander_ctr": "1.986623",
              "leads": "117",
              "cr": "0.022799",
              "bots": "0",
              "epc": "0.000218",
              "cpc": "0.001746",
              "revenue": "112",
              "cost": "895.89446139318",
              "profit": "-783.89446139318",
              "roi": "-87.498527",
              "unique_clicks": "329527",
              "is_deleted": "",
              "is_noted": false,
              "is_domain_banned": false
            }
          ]
        }
      ]
    },
    "offer_management": {
      "description": "Working with offers",
      "sample_offer": {
        "id": 1,
        "name": "inHaus - IOS - AI Smart Block - (Branch)",
        "is_deleted": false,
        "country": "",
        "url": "https://ovd0o.app.link/C102yLXNRPb?%243p=a_custom_1403847507905986865&~secondary_publisher={campaign}&~placement={t1}&~ad_id={clickid}",
        "group_name": null,
        "affiliate_network": null,
        "mean_time_to_convert": 197903.51971608834,
        "seconds_since_last_lead": "1312320",
        "clicks_last_hour": "1",
        "leads_last_hour": "0",
        "profit_last_hour": -0.00097344,
        "first_click_time": "2025-01-05 15:37:11",
        "clicks": "3",
        "is_noted": false
      },
      "available_fields": [
        "id",
        "name",
        "is_deleted",
        "country",
        "url",
        "group_name",
        "affiliate_network",
        "mean_time_to_convert",
        "seconds_since_last_lead",
        "clicks_last_hour",
        "leads_last_hour",
        "profit_last_hour",
        "first_click_time",
        "clicks",
        "is_noted"
      ]
    },
    "authentication_test": {
      "description": "Test API authentication",
      "code": "import requests\nimport os\n\ndef test_binom_auth():\n    api_key = os.getenv('binomPublic')\n    \n    headers = {\n        \"api-key\": api_key,  # CORRECT method\n        \"Content-Type\": \"application/json\"\n    }\n    \n    params = {\n        \"datePreset\": \"today\",\n        \"timezone\": \"UTC\",\n        \"limit\": 1\n    }\n    \n    response = requests.get(\n        \"https://pierdun.com/public/api/v1/info/offer\",\n        headers=headers,\n        params=params\n    )\n    \n    return response.status_code == 200\n\n# Test authentication\nif test_binom_auth():\n    print(\"✓ Authentication successful\")\nelse:\n    print(\"✗ Authentication failed\")"
    }
  },
  "ai_instructions": {
    "authentication": {
      "CRITICAL": "Use 'api-key' header, NOT Bearer token",
      "working_method": "headers = {'api-key': api_key}",
      "broken_method": "headers = {'Authorization': f'Bearer {api_key}'}",
      "test_endpoint": "/info/offer"
    },
    "required_parameters": {
      "stats_endpoints": {
        "datePreset": "ALWAYS required (e.g., 'last_7_days', 'today')",
        "timezone": "ALWAYS required (e.g., 'UTC')"
      },
      "info_endpoints": {
        "datePreset": "Optional but recommended",
        "timezone": "Optional but recommended"
      }
    },
    "custom_metrics": {
      "description": "Stats endpoints return custom metrics with UUID keys",
      "common_metrics": {
        "eCPT": "Effective Cost Per Trial",
        "eCPB": "Effective Cost Per Buyout",
        "trials": "Number of trial conversions",
        "buyouts": "Number of buyout conversions"
      },
      "ai_instruction": "When encountering unknown UUID keys, ask operator for clarification"
    },
    "error_handling": {
      "401_unauthorized": "Wrong authentication - use api-key header",
      "400_bad_request": "Missing datePreset/timezone for stats endpoints",
      "404_not_found": "Invalid endpoint or resource ID"
    },
    "best_practices": [
      "Always test authentication first with /info/offer",
      "Use small limit (1-10) for testing",
      "Include timezone parameter to avoid confusion",
      "Check response structure before processing data",
      "Handle custom metric UUIDs gracefully"
    ]
  },
  "workflow_examples": {
    "campaign_optimization": {
      "description": "Optimize campaign landing page weights",
      "steps": [
        "1. GET /campaign/{id} - Get campaign structure",
        "2. GET /stats/campaign - Get performance metrics with custom fields",
        "3. Analyze landing page performance",
        "4. PUT /campaign/{id} - Update landing weights",
        "5. Monitor results with stats endpoints"
      ]
    },
    "conversion_tracking": {
      "description": "Track and update conversions with custom events",
      "steps": [
        "1. POST /conversions - Create conversion with custom events",
        "2. PUT /conversions/{id} - Update conversion status",
        "3. GET /stats/offer - Check conversion metrics",
        "4. Use event_1 to event_30 for custom tracking"
      ]
    },
    "traffic_distribution": {
      "description": "Set up traffic distribution rules",
      "steps": [
        "1. POST /rotation - Create rotation",
        "2. Configure rules with criteria (geo, device, etc.)",
        "3. Set landing/offer weights in paths",
        "4. Monitor with /stats/rotation endpoint"
      ]
    }
  },
  "troubleshooting": {
    "common_issues": {
      "missing_custom_metrics": {
        "problem": "Custom metrics not returned in API response",
        "solution": "Check Settings→Columns configuration, ask operator for custom field names"
      },
      "403_access_denied": {
        "problem": "Access denied errors",
        "solution": "Verify Bearer token format: 'Authorization: Bearer {token}'"
      },
      "empty_stats_response": {
        "problem": "Stats endpoints return empty data",
        "solution": "Ensure datePreset and timezone parameters are included"
      },
      "campaign_update_fails": {
        "problem": "Campaign updates return validation errors",
        "solution": "Include all required fields from original campaign structure"
      }
    }
  }
}